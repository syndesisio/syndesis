{
  "actions": [],
  "componentScheme": "rest-openapi",
  "configuredProperties": {
    "componentName": "connector-rest-swagger-http4"
  },
  "connectorCustomizers": [
    "io.syndesis.connector.rest.swagger.SpecificationResourceCustomizer",
    "io.syndesis.connector.rest.swagger.AuthenticationCustomizer",
    "io.syndesis.connector.rest.swagger.RequestCustomizer",
    "io.syndesis.connector.rest.swagger.ResponseCustomizer"
  ],
  "connectorFactory": "io.syndesis.connector.rest.swagger.ConnectorFactory",
  "dependencies": [
    {
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@",
      "type": "MAVEN"
    },
    {
      "id": "org.apache.camel:camel-http:@camel.version@",
      "type": "MAVEN"
    }
  ],
  "description": "Meta connector to generate swagger client connectors",
  "icon": "",
  "id": "rest-swagger",
  "metadata": {
    "hide-from-connection-pages": "true"
  },
  "name": "OpenAPI client",
  "properties": {
    "accessToken": {
      "description": "OAuth Access token",
      "displayName": "OAuth access token",
      "javaType": "java.lang.String",
      "order": 4,
      "secret": true,
      "type": "string"
    },
    "accessTokenExpiresAt": {
      "description": "Seconds in UTC when the access token expires",
      "javaType": "java.lang.Long",
      "type": "hidden"
    },
    "authenticationParameterName": {
      "description": "Name of the API key parameter",
      "displayName": "API key parameter name",
      "javaType": "java.lang.String",
      "order": 2,
      "required": true,
      "type": "hidden"
    },
    "authenticationParameterPlacement": {
      "displayName": "Placement of the API key parameter",
      "enum": [
        {
          "label": "header",
          "value": "header"
        },
        {
          "label": "query",
          "value": "query"
        }
      ],
      "javaType": "java.lang.String",
      "order": 4,
      "required": true,
      "type": "hidden"
    },
    "authenticationParameterValue": {
      "description": "Value of the API key authentication parameter",
      "displayName": "API key",
      "javaType": "java.lang.String",
      "order": 3,
      "required": true,
      "secret": true,
      "type": "string"
    },
    "authenticationType": {
      "displayName": "Authentication type",
      "enum": [
        {
          "label": "apiKey",
          "value": "apiKey"
        },
        {
          "label": "basic",
          "value": "basic"
        },
        {
          "label": "none",
          "value": "none"
        },
        {
          "label": "oauth2",
          "value": "oauth2"
        }
      ],
      "javaType": "java.lang.String",
      "order": 1,
      "type": "hidden"
    },
    "authorizationEndpoint": {
      "description": "URL for the start of the OAuth flow",
      "displayName": "OAuth Authorization Endpoint URL",
      "javaType": "java.lang.String",
      "order": 6,
      "required": true,
      "type": "string"
    },
    "authorizeUsingParameters": {
      "description": "Should the implementation send client id and client secret when performing OAuth flow",
      "javaType": "java.lang.String",
      "type": "hidden"
    },
    "basePath": {
      "description": "API basePath for example /v2. Default is unset if set overrides the value present in OpenAPI document.",
      "displayName": "Base path",
      "javaType": "java.lang.String",
      "order": 11,
      "type": "string"
    },
    "clientId": {
      "description": "OAuth Client ID, sometimes called Consumer Key",
      "displayName": "OAuth Client ID",
      "javaType": "java.lang.String",
      "order": 2,
      "type": "string"
    },
    "clientSecret": {
      "description": "OAuth Client Secret, sometimes called Consumer Secret",
      "displayName": "OAuth Client Secret",
      "javaType": "java.lang.String",
      "order": 3,
      "secret": true,
      "type": "string"
    },
    "host": {
      "description": "Scheme hostname and port to direct the HTTP requests to in the form of https://hostname:port.",
      "displayName": "Host",
      "javaType": "java.lang.String",
      "order": 10,
      "required": true,
      "type": "string"
    },
    "oauthScopes": {
      "description": "OAuth scopes needed for the API.",
      "displayName": "OAuth Scopes",
      "javaType": "java.lang.String",
      "order": 8,
      "type": "string"
    },
    "operationId": {
      "description": "ID of the operation from the OpenAPI document.",
      "displayName": "Operation ID",
      "javaType": "java.lang.String",
      "required": true,
      "type": "hidden"
    },
    "password": {
      "description": "Password to authenticate with.",
      "displayName": "Password",
      "javaType": "java.lang.String",
      "order": 3,
      "required": true,
      "secret": true,
      "type": "string"
    },
    "refreshToken": {
      "description": "OAuth Refresh token.",
      "displayName": "OAuth Refresh token",
      "javaType": "java.lang.String",
      "order": 5,
      "secret": true,
      "type": "string"
    },
    "refreshTokenRetryStatuses": {
      "description": "Comma separated list of HTTP statuses for which to refresh the OAuth access token using the refresh token.",
      "displayName": "HTTP statuses for refreshing OAuth token",
      "javaType": "java.lang.String",
      "type": "hidden"
    },
    "specification": {
      "description": "OpenAPI document defining the service.",
      "displayName": "Document",
      "javaType": "java.lang.String",
      "required": true,
      "type": "hidden"
    },
    "tokenEndpoint": {
      "description": "URL to fetch the OAuth Access token.",
      "displayName": "OAuth Token Endpoint URL",
      "javaType": "java.lang.String",
      "order": 7,
      "type": "string"
    },
    "tokenStrategy": {
      "displayName": "OAuth Token strategy",
      "javaType": "java.lang.String",
      "type": "hidden"
    },
    "username": {
      "description": "Username to authenticate with.",
      "displayName": "Username",
      "javaType": "java.lang.String",
      "order": 2,
      "required": true,
      "type": "string"
    }
  }
}
