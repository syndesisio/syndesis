{
  "actions": [
    {
      "actionType": "connector",
      "description": "Copy one or more objects into a bucket.",
      "descriptor": {
        "componentScheme": "aws-s3",
        "connectorCustomizers": [
          "io.syndesis.connector.aws.s3.AWSS3CopyObjectCustomizer"
        ],
        "inputDataShape": {
          "kind": "any"
        },
        "outputDataShape": {
          "kind": "none"
        },
        "propertyDefinitionSteps": [
          {
            "description": "Set the filename to use for the object you're copying",
            "name": "Copy an object to an Amazon S3 bucket",
            "properties": {
              "fileName": {
                "deprecated": false,
                "displayName": "File Name",
                "group": "producer",
                "javaType": "java.lang.String",
                "kind": "parameter",
                "label": "producer",
                "labelHint": "The file name to use for the object to copy to S3",
                "required": false,
                "secret": false,
                "type": "string"
              }
            }
          }
        ]
      },
      "id": "io.syndesis:aws-s3-copy-object-connector",
      "name": "Copy Object",
      "pattern": "To"
    },
    {
      "actionType": "connector",
      "description": "Delete one object in a bucket.",
      "descriptor": {
        "componentScheme": "aws-s3",
        "connectorCustomizers": [
          "io.syndesis.connector.aws.s3.AWSS3DeleteObjectCustomizer"
        ],
        "inputDataShape": {
          "kind": "any"
        },
        "outputDataShape": {
          "kind": "none"
        },
        "propertyDefinitionSteps": [
          {
            "description": "Set the filename to use for the object you're deleting",
            "name": "Delete an object in an Amazon S3 bucket",
            "properties": {
              "fileName": {
                "deprecated": false,
                "displayName": "File Name",
                "group": "producer",
                "javaType": "java.lang.String",
                "kind": "parameter",
                "label": "producer",
                "labelHint": "The file name to use for the object to delete in S3",
                "required": false,
                "secret": false,
                "type": "string"
              }
            }
          }
        ]
      },
      "id": "io.syndesis:aws-s3-delete-object-connector",
      "name": "Delete Object",
      "pattern": "To"
    },
    {
      "actionType": "connector",
      "description": "Retrieve one object from a bucket.",
      "descriptor": {
        "componentScheme": "aws-s3",
        "inputDataShape": {
          "kind": "none"
        },
        "outputDataShape": {
          "description": "Represent one Amazon S3 Object",
          "kind": "java",
          "name": "S3Object",
          "type": "java.io.InputStream"
        },
        "propertyDefinitionSteps": [
          {
            "description": "Set the filename of the object to retrieve",
            "name": "Retrieve an object from an Amazon S3 bucket",
            "properties": {
              "fileName": {
                "deprecated": false,
                "displayName": "File Name",
                "group": "consumer",
                "javaType": "java.lang.String",
                "kind": "parameter",
                "label": "consumer",
                "labelHint": "To get the object from the bucket with the given file name",
                "required": false,
                "secret": false,
                "type": "string",
                "order": "1"
              },
              "delay": {
                "defaultValue": 500,
                "deprecated": false,
                "displayName": "Delay",
                "group": "scheduler",
                "javaType": "long",
                "kind": "parameter",
                "label": "consumer,scheduler",
                "labelHint": "Milliseconds before the next poll",
                "optionalPrefix": "consumer.",
                "required": false,
                "secret": false,
                "type": "duration",
                "order": "2"
              }
            }
          }
        ]
      },
      "id": "io.syndesis:aws-s3-get-object-connector",
      "name": "Get Object",
      "pattern": "From"
    },
    {
      "actionType": "connector",
      "description": "Retrieve multiple objects from a bucket.",
      "descriptor": {
        "componentScheme": "aws-s3",
        "inputDataShape": {
          "kind": "none"
        },
        "outputDataShape": {
          "description": "Represent one Amazon S3 Object",
          "kind": "java",
          "name": "S3Object",
          "type": "java.io.InputStream"
        },
        "propertyDefinitionSteps": [
          {
            "description": "",
            "name": "Poll an Amazon S3 Bucket",
            "properties": {
              "delay": {
                "defaultValue": 500,
                "deprecated": false,
                "displayName": "Delay",
                "group": "scheduler",
                "javaType": "long",
                "kind": "parameter",
                "label": "consumer,scheduler",
                "labelHint": "Milliseconds before the next poll. You can also specify time values using units such as 60s (60 seconds) 5m30s (5 minutes and 30 seconds) and 1h (1 hour).",
                "optionalPrefix": "consumer.",
                "order": "1",
                "required": false,
                "secret": false,
                "type": "duration"
              },
              "deleteAfterRead": {
                "defaultValue": false,
                "deprecated": false,
                "displayName": "Obtain files and then delete them from the bucket",
                "group": "consumer",
                "javaType": "boolean",
                "kind": "parameter",
                "label": "consumer",
                "labelHint": "Delete objects from S3 after they have been retrieved. The delete is only performed if the Exchange is committed. If a rollback occurs the object is not deleted. If this option is false then the same objects will be retrieve over and over again on the polls. Therefore you need to use the Idempotent Consumer EIP in the route to filter out duplicates. You can filter using the link S3ConstantsBUCKET_NAME and link S3ConstantsKEY headers or only the link S3ConstantsKEY header.",
                "order": "4",
                "required": false,
                "secret": false,
                "type": "boolean"
              },
              "maxMessagesPerPoll": {
                "defaultValue": 10,
                "deprecated": false,
                "displayName": "Maximum Objects to Retrieve",
                "group": "consumer",
                "javaType": "int",
                "kind": "parameter",
                "label": "consumer",
                "labelHint": "Gets the maximum number of messages as a limit to poll at each polling. Is default unlimited but use 0 or negative number to disable it as unlimited.",
                "order": "2",
                "required": false,
                "secret": false,
                "type": "integer"
              },
              "prefix": {
                "deprecated": false,
                "displayName": "Prefix",
                "group": "consumer",
                "javaType": "java.lang.String",
                "kind": "parameter",
                "label": "consumer",
                "labelHint": "The prefix which is used in the com.amazonaws.services.s3.model.ListObjectsRequest to only consume objects we are interested in.",
                "order": "3",
                "required": false,
                "secret": false,
                "type": "string"
              }
            }
          }
        ]
      },
      "id": "io.syndesis:aws-s3-polling-bucket-connector",
      "name": "Poll an Amazon S3 Bucket",
      "pattern": "From"
    }
  ],
  "configuredProperties": {},
  "dependencies": [
    {
      "id": "@project.groupId@:@project.artifactId@:@project.version@",
      "type": "MAVEN"
    }
  ],
  "description": "Retrieve and store objects.",
  "icon": "assets:aws-s3.svg",
  "id": "aws-s3",
  "name": "Amazon S3",
  "properties": {
    "accessKey": {
      "deprecated": false,
      "displayName": "Access Key",
      "group": "common",
      "javaType": "java.lang.String",
      "kind": "parameter",
      "labelHint": "Amazon AWS Access Key",
      "order": "1",
      "raw": true,
      "required": true,
      "secret": false,
      "type": "string"
    },
    "bucketNameOrArn": {
      "deprecated": false,
      "displayName": "Bucket Name Or Amazon Resource Name",
      "group": "common",
      "javaType": "java.lang.String",
      "kind": "path",
      "labelHint": "Bucket name or ARN",
      "order": "4",
      "required": true,
      "secret": false,
      "type": "string"
    },
    "region": {
      "defaultValue": "US_EAST_1",
      "deprecated": false,
      "displayName": "Region",
      "enum": [
        {
          "label": "AP NORTHEAST 1",
          "value": "AP_NORTHEAST_1"
        },
        {
          "label": "AP NORTHEAST 2",
          "value": "AP_NORTHEAST_2"
        },
        {
          "label": "AP SOUTH 1",
          "value": "AP_SOUTH_1"
        },
        {
          "label": "AP SOUTHEAST 1",
          "value": "AP_SOUTHEAST_1"
        },
        {
          "label": "AP SOUTHEAST 2",
          "value": "AP_SOUTHEAST_2"
        },
        {
          "label": "CA CENTRAL 1",
          "value": "CA_CENTRAL_1"
        },
        {
          "label": "CN NORTH 1",
          "value": "CN_NORTH_1"
        },
        {
          "label": "CN NORTHWEST 1",
          "value": "CN_NORTHWEST_1"
        },
        {
          "label": "EU CENTRAL 1",
          "value": "EU_CENTRAL_1"
        },
        {
          "label": "EU WEST 1",
          "value": "EU_WEST_1"
        },
        {
          "label": "EU WEST 2",
          "value": "EU_WEST_2"
        },
        {
          "label": "EU WEST 3",
          "value": "EU_WEST_3"
        },
        {
          "label": "Gov Cloud",
          "value": "GovCloud"
        },
        {
          "label": "SA EAST 1",
          "value": "SA_EAST_1"
        },
        {
          "label": "US EAST 1",
          "value": "US_EAST_1"
        },
        {
          "label": "US EAST 2",
          "value": "US_EAST_2"
        },
        {
          "label": "US WEST 1",
          "value": "US_WEST_1"
        },
        {
          "label": "US WEST 2",
          "value": "US_WEST_2"
        }
      ],
      "group": "producer",
      "javaType": "java.lang.String",
      "kind": "parameter",
      "label": "producer",
      "labelHint": "The region where the bucket is located. This option is used in the com.amazonaws.services.s3.model.CreateBucketRequest.",
      "order": "3",
      "required": true,
      "secret": false,
      "type": "string"
    },
    "secretKey": {
      "deprecated": false,
      "displayName": "Secret Key",
      "group": "common",
      "javaType": "java.lang.String",
      "kind": "parameter",
      "labelHint": "Amazon AWS Secret Key",
      "order": "2",
      "raw": true,
      "required": true,
      "secret": true,
      "type": "string"
    }
  },
  "tags": [
    "verifier"
  ]
}
