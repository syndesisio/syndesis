{
  "actions": [
    {
      "actionType": "connector",
      "description": "Send PUT request to /pet",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "configuredProperties": {
          "operationId": "updatePet"
        },
        "inputDataShape": {
          "description": "API request payload",
          "kind": "json-schema",
          "name": "Request",
          "specification": "{\"$schema\": \"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"properties\": {\"body\": {\"properties\": {\"category\": {\"properties\": {\"id\": {\"format\": \"int64\", \"type\": \"integer\"}, \"name\": {\"type\": \"string\"}}, \"type\": \"object\", \"xml\": {\"name\": \"Category\"}}, \"id\": {\"format\": \"int64\", \"type\": \"integer\"}, \"name\": {\"example\": \"doggie\", \"type\": \"string\"}, \"photoUrls\": {\"items\": {\"type\": \"string\"}, \"type\": \"array\", \"xml\": {\"name\": \"photoUrl\", \"wrapped\": true}}, \"status\": {\"description\": \"pet status in the store\", \"enum\": [ \"available\", \"pending\", \"sold\" ], \"type\": \"string\"}, \"tags\": {\"items\": {\"properties\": {\"id\": {\"format\": \"int64\", \"type\": \"integer\"}, \"name\": {\"type\": \"string\"}}, \"type\": \"object\", \"xml\": {\"name\": \"Tag\"}}, \"type\": \"array\", \"xml\": {\"name\": \"tag\", \"wrapped\": true}}}, \"required\": [ \"name\", \"photoUrls\" ], \"type\": \"object\", \"xml\": {\"name\": \"Pet\"}}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "kind": "none"
        }
      },
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:updatePet",
      "name": "Update an existing pet",
      "pattern": "To",
      "tags": [
        "pet"
      ]
    },
    {
      "actionType": "connector",
      "description": "Send POST request to /pet",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "configuredProperties": {
          "operationId": "addPet"
        },
        "inputDataShape": {
          "description": "API request payload",
          "kind": "json-schema",
          "name": "Request",
          "specification": "{\"$schema\": \"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"properties\": {\"body\" : {\"type\":\"object\",\"required\":[\"name\",\"photoUrls\"],\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"category\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"name\":{\"type\":\"string\"}},\"xml\":{\"name\":\"Category\"}},\"name\":{\"type\":\"string\",\"example\":\"doggie\"},\"photoUrls\":{\"type\":\"array\",\"xml\":{\"name\":\"photoUrl\",\"wrapped\":true},\"items\":{\"type\":\"string\"}},\"tags\":{\"type\":\"array\",\"xml\":{\"name\":\"tag\",\"wrapped\":true},\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"name\":{\"type\":\"string\"}},\"xml\":{\"name\":\"Tag\"}}},\"status\":{\"type\":\"string\",\"description\":\"pet status in the store\",\"enum\":[\"available\",\"pending\",\"sold\"], \"type\" : \"string\"}},\"xml\":{\"name\":\"Pet\"}}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "kind": "none"
        }
      },
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:addPet",
      "name": "Add a new pet to the store",
      "pattern": "To",
      "tags": [
        "pet"
      ]
    },
    {
      "actionType": "connector",
      "description": "Multiple status values can be provided with comma separated strings",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "configuredProperties": {
          "operationId": "findPetsByStatus"
        },
        "inputDataShape": {
          "description": "API request payload",
          "kind": "json-schema",
          "name": "Request",
          "specification": "{\"$schema\": \"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"properties\": {\"parameters\": {\"properties\": {\"status\": {\"description\": \"Status values that need to be considered for filter\", \"items\": {\"enum\": [ \"available\", \"pending\", \"sold\" ], \"type\" : \"string\"}, \"title\": \"status\", \"type\": \"array\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "description": "API response payload",
          "kind": "json-schema",
          "name": "Response",
          "specification": "{\"$schema\":\"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\",  \"$id\": \"io:syndesis:wrapped\", \"properties\":{\"body\":{\"items\":{\"properties\":{\"category\":{\"properties\":{\"id\":{\"format\":\"int64\",\"type\":\"integer\"},\"name\":{\"type\":\"string\"}},\"type\":\"object\",\"xml\":{\"name\":\"Category\"}},\"id\":{\"format\":\"int64\",\"type\":\"integer\"},\"name\":{\"example\":\"doggie\",\"type\":\"string\"},\"photoUrls\":{\"items\":{\"type\":\"string\"},\"type\":\"array\",\"xml\":{\"name\":\"photoUrl\",\"wrapped\":true}},\"status\":{\"description\":\"pet status in the store\",\"enum\":[\"available\",\"pending\",\"sold\"],\"type\":\"string\"},\"tags\":{\"items\":{\"properties\":{\"id\":{\"format\":\"int64\",\"type\":\"integer\"},\"name\":{\"type\":\"string\"}},\"type\":\"object\",\"xml\":{\"name\":\"Tag\"}},\"type\":\"array\",\"xml\":{\"name\":\"tag\",\"wrapped\":true}}},\"required\":[\"name\",\"photoUrls\"],\"type\":\"object\",\"xml\":{\"name\":\"Pet\"}},\"type\":\"array\" }}, \"type\":\"object\" }"
        }
      },
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:findPetsByStatus",
      "name": "Finds Pets by status",
      "pattern": "To",
      "tags": [
        "pet"
      ]
    },
    {
      "actionType": "connector",
      "description": "Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "configuredProperties": {
          "operationId": "findPetsByTags"
        },
        "inputDataShape": {
          "description": "API request payload",
          "kind": "json-schema",
          "name": "Request",
          "specification": "{\"$schema\": \"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"properties\": {\"parameters\": {\"properties\": {\"tags\": {\"description\": \"Tags to filter by\", \"items\": {\"type\": \"string\"}, \"title\": \"tags\", \"type\": \"array\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "description": "API response payload",
          "kind": "json-schema",
          "name": "Response",
          "specification": "{\"$schema\":\"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\",  \"$id\": \"io:syndesis:wrapped\", \"properties\":{\"body\":{\"items\":{\"properties\":{\"category\":{\"properties\":{\"id\":{\"format\":\"int64\",\"type\":\"integer\"},\"name\":{\"type\":\"string\"}},\"type\":\"object\",\"xml\":{\"name\":\"Category\"}},\"id\":{\"format\":\"int64\",\"type\":\"integer\"},\"name\":{\"example\":\"doggie\",\"type\":\"string\"},\"photoUrls\":{\"items\":{\"type\":\"string\"},\"type\":\"array\",\"xml\":{\"name\":\"photoUrl\",\"wrapped\":true}},\"status\":{\"description\":\"pet status in the store\",\"enum\":[\"available\",\"pending\",\"sold\"],\"type\":\"string\"},\"tags\":{\"items\":{\"properties\":{\"id\":{\"format\":\"int64\",\"type\":\"integer\"},\"name\":{\"type\":\"string\"}},\"type\":\"object\",\"xml\":{\"name\":\"Tag\"}},\"type\":\"array\",\"xml\":{\"name\":\"tag\",\"wrapped\":true}}},\"required\":[\"name\",\"photoUrls\"],\"type\":\"object\",\"xml\":{\"name\":\"Pet\"}},\"type\":\"array\"}},\"type\":\"object\"}"
        }
      },
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:findPetsByTags",
      "name": "Finds Pets by tags",
      "pattern": "To",
      "tags": [
        "pet"
      ]
    },
    {
      "actionType": "connector",
      "description": "Returns a single pet",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "configuredProperties": {
          "operationId": "getPetById"
        },
        "inputDataShape": {
          "description": "API request payload",
          "kind": "json-schema",
          "name": "Request",
          "specification": "{\"$schema\": \"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"properties\": {\"parameters\": {\"properties\": {\"petId\": {\"description\": \"ID of pet to return\", \"title\": \"petId\", \"type\": \"integer\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "description": "API response payload",
          "kind": "json-schema",
          "name": "Response",
          "specification": "{\"$schema\":\"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"type\":\"object\",\"properties\":{\"body\":{\"type\":\"object\",\"required\":[\"name\",\"photoUrls\"],\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"category\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"name\":{\"type\":\"string\"}},\"xml\":{\"name\":\"Category\"}},\"name\":{\"type\":\"string\",\"example\":\"doggie\"},\"photoUrls\":{\"type\":\"array\",\"xml\":{\"name\":\"photoUrl\",\"wrapped\":true},\"items\":{\"type\":\"string\"}},\"tags\":{\"type\":\"array\",\"xml\":{\"name\":\"tag\",\"wrapped\":true},\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"name\":{\"type\":\"string\"}},\"xml\":{\"name\":\"Tag\"}}},\"status\":{\"type\":\"string\",\"description\":\"pet status in the store\",\"enum\":[\"available\",\"pending\",\"sold\"]}},\"xml\":{\"name\":\"Pet\"}}}}"
        }
      },
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:getPetById",
      "name": "Find pet by ID",
      "pattern": "To",
      "tags": [
        "pet"
      ]
    },
    {
      "actionType": "connector",
      "description": "Send POST request to /pet/{petId}",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "configuredProperties": {
          "operationId": "updatePetWithForm"
        },
        "inputDataShape": {
          "description": "API request payload",
          "kind": "json-schema",
          "name": "Request",
          "specification": "{\"$schema\": \"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"properties\": {\"parameters\": {\"properties\": {\"name\": {\"description\": \"Updated name of the pet\", \"title\": \"name\", \"type\": \"string\"}, \"petId\": {\"description\": \"ID of pet that needs to be updated\", \"title\": \"petId\", \"type\": \"integer\"}, \"status\": {\"description\": \"Updated status of the pet\", \"title\": \"status\", \"type\": \"string\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "kind": "none"
        }
      },
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:updatePetWithForm",
      "name": "Updates a pet in the store with form data",
      "pattern": "To",
      "tags": [
        "pet"
      ]
    },
    {
      "actionType": "connector",
      "description": "Send DELETE request to /pet/{petId}",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "configuredProperties": {
          "operationId": "deletePet"
        },
        "inputDataShape": {
          "description": "API request payload",
          "kind": "json-schema",
          "name": "Request",
          "specification": "{\"$schema\": \"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"properties\": {\"parameters\": {\"properties\": {\"api_key\": {\"title\": \"api_key\", \"type\": \"string\"}, \"petId\": {\"description\": \"Pet id to delete\", \"title\": \"petId\", \"type\": \"integer\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "kind": "none"
        }
      },
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:deletePet",
      "name": "Deletes a pet",
      "pattern": "To",
      "tags": [
        "pet"
      ]
    },
    {
      "actionType": "connector",
      "description": "Send POST request to /pet/{petId}/uploadImage",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "configuredProperties": {
          "operationId": "uploadFile"
        },
        "inputDataShape": {
          "description": "API request payload",
          "kind": "json-schema",
          "name": "Request",
          "specification": "{\"$schema\": \"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"properties\": {\"parameters\": {\"properties\": {\"additionalMetadata\": {\"description\": \"Additional data to pass to server\", \"title\": \"additionalMetadata\", \"type\": \"string\"}, \"petId\": {\"description\": \"ID of pet to update\", \"title\": \"petId\", \"type\": \"integer\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "description": "API response payload",
          "kind": "json-schema",
          "name": "Response",
          "specification": "{\"$schema\":\"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"type\":\"object\",\"properties\":{\"body\":{\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"integer\",\"format\":\"int32\"},\"type\":{\"type\":\"string\"},\"message\":{\"type\":\"string\"}}}}}"
        }
      },
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:uploadFile",
      "name": "uploads an image",
      "pattern": "To",
      "tags": [
        "pet"
      ]
    },
    {
      "actionType": "connector",
      "description": "Returns a map of status codes to quantities",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "configuredProperties": {
          "operationId": "getInventory"
        },
        "inputDataShape": {
          "kind": "none"
        },
        "outputDataShape": {
          "description": "API response payload",
          "kind": "json-schema",
          "name": "Response",
          "specification": "{\"$schema\":\"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"type\":\"object\",\"properties\":{\"body\":{\"type\":\"object\",\"additionalProperties\":{\"type\":\"integer\",\"format\":\"int32\"}}}}"
        }
      },
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:getInventory",
      "name": "Returns pet inventories by status",
      "pattern": "To",
      "tags": [
        "store"
      ]
    },
    {
      "actionType": "connector",
      "description": "Send POST request to /store/order",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "configuredProperties": {
          "operationId": "placeOrder"
        },
        "inputDataShape": {
          "description": "API request payload",
          "kind": "json-schema",
          "name": "Request",
          "specification": "{\"$schema\": \"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"properties\": {\"body\": {\"properties\": {\"complete\": {\"default\": false, \"type\": \"boolean\"}, \"id\": {\"format\": \"int64\", \"type\": \"integer\"}, \"petId\": {\"format\": \"int64\", \"type\": \"integer\"}, \"quantity\": {\"format\": \"int32\", \"type\": \"integer\"}, \"shipDate\": {\"format\": \"date-time\", \"type\": \"string\"}, \"status\": {\"description\": \"Order Status\", \"enum\": [ \"placed\", \"approved\", \"delivered\" ], \"type\": \"string\"}}, \"type\": \"object\", \"xml\": {\"name\": \"Order\"}}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "description": "API response payload",
          "kind": "json-schema",
          "name": "Response",
          "specification": "{\"$schema\":\"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"type\":\"object\",\"properties\":{\"body\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"petId\":{\"type\":\"integer\",\"format\":\"int64\"},\"quantity\":{\"type\":\"integer\",\"format\":\"int32\"},\"shipDate\":{\"type\":\"string\",\"format\":\"date-time\"},\"status\":{\"type\":\"string\",\"description\":\"Order Status\",\"enum\":[\"placed\",\"approved\",\"delivered\"]},\"complete\":{\"type\":\"boolean\",\"default\":false}},\"xml\":{\"name\":\"Order\"}}}}"
        }
      },
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:placeOrder",
      "name": "Place an order for a pet",
      "pattern": "To",
      "tags": [
        "store"
      ]
    },
    {
      "actionType": "connector",
      "description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "configuredProperties": {
          "operationId": "getOrderById"
        },
        "inputDataShape": {
          "description": "API request payload",
          "kind": "json-schema",
          "name": "Request",
          "specification": "{\"$schema\": \"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"properties\": {\"parameters\": {\"properties\": {\"orderId\": {\"description\": \"ID of pet that needs to be fetched\", \"title\": \"orderId\", \"type\": \"integer\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "description": "API response payload",
          "kind": "json-schema",
          "name": "Response",
          "specification": "{\"$schema\":\"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"type\":\"object\",\"properties\":{\"body\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"petId\":{\"type\":\"integer\",\"format\":\"int64\"},\"quantity\":{\"type\":\"integer\",\"format\":\"int32\"},\"shipDate\":{\"type\":\"string\",\"format\":\"date-time\"},\"status\":{\"type\":\"string\",\"description\":\"Order Status\",\"enum\":[\"placed\",\"approved\",\"delivered\"]},\"complete\":{\"type\":\"boolean\",\"default\":false}},\"xml\":{\"name\":\"Order\"}}}}"
        }
      },
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:getOrderById",
      "name": "Find purchase order by ID",
      "pattern": "To",
      "tags": [
        "store"
      ]
    },
    {
      "actionType": "connector",
      "description": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "configuredProperties": {
          "operationId": "deleteOrder"
        },
        "inputDataShape": {
          "description": "API request payload",
          "kind": "json-schema",
          "name": "Request",
          "specification": "{\"$schema\": \"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"properties\": {\"parameters\": {\"properties\": {\"orderId\": {\"description\": \"ID of the order that needs to be deleted\", \"title\": \"orderId\", \"type\": \"integer\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "kind": "none"
        }
      },
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:deleteOrder",
      "name": "Delete purchase order by ID",
      "pattern": "To",
      "tags": [
        "store"
      ]
    },
    {
      "actionType": "connector",
      "description": "This can only be done by the logged in user.",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "configuredProperties": {
          "operationId": "createUser"
        },
        "inputDataShape": {
          "description": "API request payload",
          "kind": "json-schema",
          "name": "Request",
          "specification": "{\"$schema\": \"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"properties\": {\"body\": {\"properties\": {\"email\": {\"type\": \"string\"}, \"firstName\": {\"type\": \"string\"}, \"id\": {\"format\": \"int64\", \"type\": \"integer\"}, \"lastName\": {\"type\": \"string\"}, \"password\": {\"type\": \"string\"}, \"phone\": {\"type\": \"string\"}, \"userStatus\": {\"description\": \"User Status\", \"format\": \"int32\", \"type\": \"integer\"}, \"username\": {\"type\": \"string\"}}, \"type\": \"object\", \"xml\": {\"name\": \"User\"}}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "kind": "none"
        }
      },
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:createUser",
      "name": "Create user",
      "pattern": "To",
      "tags": [
        "user"
      ]
    },
    {
      "actionType": "connector",
      "description": "Send POST request to /user/createWithArray",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "configuredProperties": {
          "operationId": "createUsersWithArrayInput"
        },
        "inputDataShape": {
          "description": "API request payload",
          "kind": "json-schema",
          "name": "Request",
          "specification": "{\"$schema\":\"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"properties\":{\"body\":{\"items\":{\"properties\":{\"email\":{\"type\":\"string\"},\"firstName\":{\"type\":\"string\"},\"id\":{\"format\":\"int64\",\"type\":\"integer\"},\"lastName\":{\"type\":\"string\"},\"password\":{\"type\":\"string\"},\"phone\":{\"type\":\"string\"},\"userStatus\":{\"description\":\"User Status\",\"format\":\"int32\",\"type\":\"integer\"},\"username\":{\"type\":\"string\"}},\"type\":\"object\",\"xml\":{\"name\":\"User\"}},\"type\":\"array\"}},\"type\":\"object\"}"
        },
        "outputDataShape": {
          "kind": "none"
        }
      },
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:createUsersWithArrayInput",
      "name": "Creates list of users with given input array",
      "pattern": "To",
      "tags": [
        "user"
      ]
    },
    {
      "actionType": "connector",
      "description": "Send POST request to /user/createWithList",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "configuredProperties": {
          "operationId": "createUsersWithListInput"
        },
        "inputDataShape": {
          "description": "API request payload",
          "kind": "json-schema",
          "name": "Request",
          "specification": "{\"$schema\":\"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"properties\":{\"body\":{\"items\":{\"properties\":{\"email\":{\"type\":\"string\"},\"firstName\":{\"type\":\"string\"},\"id\":{\"format\":\"int64\",\"type\":\"integer\"},\"lastName\":{\"type\":\"string\"},\"password\":{\"type\":\"string\"},\"phone\":{\"type\":\"string\"},\"userStatus\":{\"description\":\"User Status\",\"format\":\"int32\",\"type\":\"integer\"},\"username\":{\"type\":\"string\"}},\"type\":\"object\",\"xml\":{\"name\":\"User\"}},\"type\":\"array\"}},\"type\":\"object\"}"
        },
        "outputDataShape": {
          "kind": "none"
        }
      },
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:createUsersWithListInput",
      "name": "Creates list of users with given input array",
      "pattern": "To",
      "tags": [
        "user"
      ]
    },
    {
      "actionType": "connector",
      "description": "Send GET request to /user/login",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "configuredProperties": {
          "operationId": "loginUser"
        },
        "inputDataShape": {
          "description": "API request payload",
          "kind": "json-schema",
          "name": "Request",
          "specification": "{\"$schema\": \"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"properties\": {\"parameters\": {\"properties\": {\"password\": {\"description\": \"The password for login in clear text\", \"title\": \"password\", \"type\": \"string\"}, \"username\": {\"description\": \"The user name for login\", \"title\": \"username\", \"type\": \"string\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "description": "API response payload",
          "kind": "json-schema",
          "name": "Response",
          "specification": "{\"$schema\":\"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"type\":\"object\",\"properties\":{\"body\":{\"type\":\"string\"}}}"
        }
      },
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:loginUser",
      "name": "Logs user into the system",
      "pattern": "To",
      "tags": [
        "user"
      ]
    },
    {
      "actionType": "connector",
      "description": "Send GET request to /user/logout",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "configuredProperties": {
          "operationId": "logoutUser"
        },
        "inputDataShape": {
          "kind": "none"
        },
        "outputDataShape": {
          "kind": "none"
        }
      },
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:logoutUser",
      "name": "Logs out current logged in user session",
      "pattern": "To",
      "tags": [
        "user"
      ]
    },
    {
      "actionType": "connector",
      "description": "Send GET request to /user/{username}",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "configuredProperties": {
          "operationId": "getUserByName"
        },
        "inputDataShape": {
          "description": "API request payload",
          "kind": "json-schema",
          "name": "Request",
          "specification": "{\"$schema\": \"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"properties\": {\"parameters\": {\"properties\": {\"username\": {\"description\": \"The name that needs to be fetched. Use user1 for testing.\", \"title\": \"username\", \"type\": \"string\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "description": "API response payload",
          "kind": "json-schema",
          "name": "Response",
          "specification": "{\"$schema\":\"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"type\":\"object\",\"properties\":{\"body\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"username\":{\"type\":\"string\"},\"firstName\":{\"type\":\"string\"},\"lastName\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"password\":{\"type\":\"string\"},\"phone\":{\"type\":\"string\"},\"userStatus\":{\"type\":\"integer\",\"format\":\"int32\",\"description\":\"User Status\"}},\"xml\":{\"name\":\"User\"}}}}"
        }
      },
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:getUserByName",
      "name": "Get user by user name",
      "pattern": "To",
      "tags": [
        "user"
      ]
    },
    {
      "actionType": "connector",
      "description": "This can only be done by the logged in user.",
      "descriptor": {
        "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@project.version@",
        "camelConnectorPrefix": "swagger-operation",
        "configuredProperties": {
          "operationId": "updateUser"
        },
        "inputDataShape": {
          "description": "API request payload",
          "kind": "json-schema",
          "name": "Request",
          "specification": "{\"$schema\": \"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"properties\": {\"body\": {\"properties\": {\"email\": {\"type\": \"string\"}, \"firstName\": {\"type\": \"string\"}, \"id\": {\"format\": \"int64\", \"type\": \"integer\"}, \"lastName\": {\"type\": \"string\"}, \"password\": {\"type\": \"string\"}, \"phone\": {\"type\": \"string\"}, \"userStatus\": {\"description\": \"User Status\", \"format\": \"int32\", \"type\": \"integer\"}, \"username\": {\"type\": \"string\"}},\"type\": \"object\", \"xml\": {\"name\": \"User\"}}, \"parameters\": {\"properties\": {\"username\": {\"description\": \"name that need to be updated\", \"title\": \"username\", \"type\": \"string\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "kind": "none"
        }
      },
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:updateUser",
      "name": "Updated user",
      "pattern": "To",
      "tags": [
        "user"
      ]
    },
    {
      "actionType": "connector",
      "description": "This can only be done by the logged in user.",
      "descriptor": {
        "camelConnectorPrefix": "swagger-operation",
        "configuredProperties": {
          "operationId": "deleteUser"
        },
        "inputDataShape": {
          "description": "API request payload",
          "kind": "json-schema",
          "name": "Request",
          "specification": "{\"$schema\": \"http://json-schema.org/schema#\", \"$id\": \"io:syndesis:wrapped\", \"properties\": {\"parameters\": {\"properties\": {\"username\": {\"description\": \"The name that needs to be deleted\", \"title\": \"username\", \"type\": \"string\"}}, \"type\": \"object\"}}, \"type\": \"object\"}"
        },
        "outputDataShape": {
          "kind": "none"
        }
      },
      "id": "io.syndesis.connector:connector-rest-swagger:@project.version@:_id_:deleteUser",
      "name": "Delete user",
      "pattern": "To",
      "tags": [
        "user"
      ]
    }
  ],
  "configuredProperties": {
    "authenticationType": "oauth2",
    "authorizationEndpoint": "http://petstore.swagger.io/oauth/dialog",
    "basePath": "/v2",
    "host": "http://petstore.swagger.io",
    "oauthScopes": "write:pets read:pets",
    "specification": "{\"swagger\":\"2.0\",\"host\":\"petstore.swagger.io\",\"basePath\":\"/v2\",\"schemes\":[\"http\"],\"paths\":{\"/pet\":{\"post\":{\"operationId\":\"addPet\",\"consumes\":[\"application/json\",\"application/xml\"],\"produces\":[\"application/xml\",\"application/json\"]},\"put\":{\"operationId\":\"updatePet\",\"consumes\":[\"application/json\",\"application/xml\"],\"produces\":[\"application/xml\",\"application/json\"]}},\"/pet/findByStatus\":{\"get\":{\"operationId\":\"findPetsByStatus\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"name\":\"status\",\"in\":\"query\",\"items\":{\"type\":\"string\",\"default\":\"available\",\"enum\":[\"available\",\"pending\",\"sold\"]},\"collectionFormat\":\"multi\"}]}},\"/pet/findByTags\":{\"get\":{\"operationId\":\"findPetsByTags\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"name\":\"tags\",\"in\":\"query\",\"items\":{\"type\":\"string\"},\"collectionFormat\":\"multi\"}],\"deprecated\":true}},\"/pet/{petId}\":{\"get\":{\"operationId\":\"getPetById\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"name\":\"petId\",\"in\":\"path\"}]},\"post\":{\"operationId\":\"updatePetWithForm\",\"consumes\":[\"application/x-www-form-urlencoded\"],\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"name\":\"petId\",\"in\":\"path\"}]},\"delete\":{\"operationId\":\"deletePet\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"name\":\"petId\",\"in\":\"path\"}]}},\"/pet/{petId}/uploadImage\":{\"post\":{\"operationId\":\"uploadFile\",\"consumes\":[\"multipart/form-data\"],\"produces\":[\"application/json\"],\"parameters\":[{\"name\":\"petId\",\"in\":\"path\"}]}},\"/store/inventory\":{\"get\":{\"operationId\":\"getInventory\",\"produces\":[\"application/json\"]}},\"/store/order\":{\"post\":{\"operationId\":\"placeOrder\",\"produces\":[\"application/xml\",\"application/json\"]}},\"/store/order/{orderId}\":{\"get\":{\"operationId\":\"getOrderById\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"name\":\"orderId\",\"in\":\"path\",\"maximum\":1E+1,\"minimum\":1}]},\"delete\":{\"operationId\":\"deleteOrder\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"name\":\"orderId\",\"in\":\"path\",\"minimum\":1}]}},\"/user\":{\"post\":{\"operationId\":\"createUser\",\"produces\":[\"application/xml\",\"application/json\"]}},\"/user/createWithArray\":{\"post\":{\"operationId\":\"createUsersWithArrayInput\",\"produces\":[\"application/xml\",\"application/json\"]}},\"/user/createWithList\":{\"post\":{\"operationId\":\"createUsersWithListInput\",\"produces\":[\"application/xml\",\"application/json\"]}},\"/user/login\":{\"get\":{\"operationId\":\"loginUser\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"name\":\"username\",\"in\":\"query\"},{\"name\":\"password\",\"in\":\"query\"}]}},\"/user/logout\":{\"get\":{\"operationId\":\"logoutUser\",\"produces\":[\"application/xml\",\"application/json\"]}},\"/user/{username}\":{\"get\":{\"operationId\":\"getUserByName\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"name\":\"username\",\"in\":\"path\"}]},\"put\":{\"operationId\":\"updateUser\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"name\":\"username\",\"in\":\"path\"}]},\"delete\":{\"operationId\":\"deleteUser\",\"produces\":[\"application/xml\",\"application/json\"],\"parameters\":[{\"name\":\"username\",\"in\":\"path\"}]}}}}"
  },
  "connectorGroup": {
    "id": "swagger-connector-template"
  },
  "connectorGroupId": "swagger-connector-template",
  "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
  "name": "Swagger Petstore",
  "properties": {
    "accessToken": {
      "componentProperty": true,
      "deprecated": false,
      "description": "OAuth Access token",
      "displayName": "OAuth Access token",
      "group": "producer",
      "javaType": "java.lang.String",
      "kind": "property",
      "label": "producer",
      "order": 4,
      "required": false,
      "secret": true,
      "tags": [
        "oauth-access-token"
      ],
      "type": "string"
    },
    "accessTokenExpiresAt": {
      "componentProperty": true,
      "deprecated": false,
      "description": "Seconds in UTC when the access token expires",
      "group": "producer",
      "javaType": "java.lang.Long",
      "kind": "property",
      "label": "producer",
      "required": false,
      "secret": false,
      "type": "hidden"
    },
    "authenticationType": {
      "componentProperty": true,
      "defaultValue": "oauth2",
      "deprecated": false,
      "description": "Type of authentication used to connect to the API",
      "displayName": "Authentication Type",
      "enum": [
        {
          "label": "OAuth 2.0",
          "value": "oauth2"
        }
      ],
      "group": "producer",
      "javaType": "java.lang.String",
      "kind": "property",
      "label": "producer",
      "order": 1,
      "required": false,
      "secret": false,
      "tags": [
        "authentication-type"
      ],
      "type": "string"
    },
    "authorizationEndpoint": {
      "componentProperty": true,
      "defaultValue": "http://petstore.swagger.io/oauth/dialog",
      "deprecated": false,
      "description": "URL for the start of the OAuth flow",
      "displayName": "OAuth Authorization Endpoint URL",
      "group": "producer",
      "javaType": "java.lang.String",
      "kind": "property",
      "label": "producer",
      "order": 6,
      "required": true,
      "secret": false,
      "tags": [
        "oauth-authorization-url"
      ],
      "type": "string"
    },
    "basePath": {
      "componentProperty": true,
      "defaultValue": "/v2",
      "deprecated": false,
      "description": "API basePath for example /v2. Default is unset if set overrides the value present in OpenAPI document.",
      "displayName": "Base path",
      "group": "producer",
      "javaType": "java.lang.String",
      "kind": "property",
      "label": "producer",
      "order": 11,
      "required": true,
      "secret": false,
      "type": "string"
    },
    "clientId": {
      "componentProperty": true,
      "deprecated": false,
      "description": "OAuth Client ID, sometimes called Consumer Key",
      "displayName": "OAuth Client ID",
      "group": "producer",
      "javaType": "java.lang.String",
      "kind": "property",
      "label": "producer",
      "order": 2,
      "required": false,
      "secret": false,
      "tags": [
        "oauth-client-id"
      ],
      "type": "string"
    },
    "clientSecret": {
      "componentProperty": true,
      "deprecated": false,
      "description": "OAuth Client Secret, sometimes called Consumer Secret",
      "displayName": "OAuth Client Secret",
      "group": "producer",
      "javaType": "java.lang.String",
      "kind": "property",
      "label": "producer",
      "order": 3,
      "required": false,
      "secret": true,
      "tags": [
        "oauth-client-secret"
      ],
      "type": "string"
    },
    "host": {
      "componentProperty": true,
      "defaultValue": "http://petstore.swagger.io",
      "deprecated": false,
      "description": "Scheme hostname and port to direct the HTTP requests to in the form of https://hostname:port.",
      "displayName": "Host",
      "group": "producer",
      "javaType": "java.lang.String",
      "kind": "property",
      "label": "producer",
      "order": 10,
      "required": true,
      "secret": false,
      "type": "string"
    },
    "oauthScopes": {
      "componentProperty": true,
      "defaultValue": "write:pets read:pets",
      "deprecated": false,
      "description": "URL to fetch the OAuth Access token",
      "displayName": "OAuth Scopes",
      "group": "producer",
      "javaType": "java.lang.String",
      "kind": "property",
      "label": "producer",
      "order": 8,
      "required": false,
      "secret": false,
      "tags": [
        "oauth-scope"
      ],
      "type": "string"
    },
    "refreshToken": {
      "componentProperty": true,
      "deprecated": false,
      "description": "OAuth Refresh token",
      "displayName": "OAuth Refresh token",
      "group": "producer",
      "javaType": "java.lang.String",
      "kind": "property",
      "label": "producer",
      "order": 5,
      "required": false,
      "secret": true,
      "tags": [
        "oauth-refresh-token"
      ],
      "type": "string"
    },
    "specification": {
      "componentProperty": true,
      "deprecated": false,
      "description": "OpenAPI document of the service",
      "displayName": "Document",
      "group": "producer",
      "javaType": "java.lang.String",
      "kind": "property",
      "label": "producer",
      "required": true,
      "secret": false,
      "tags": [
        "upload",
        "url"
      ],
      "type": "hidden"
    },
    "tokenEndpoint": {
      "componentProperty": true,
      "deprecated": false,
      "description": "URL to fetch the OAuth Access token",
      "displayName": "OAuth Token Endpoint URL",
      "group": "producer",
      "javaType": "java.lang.String",
      "kind": "property",
      "label": "producer",
      "order": 7,
      "required": false,
      "secret": false,
      "tags": [
        "oauth-access-token-url"
      ],
      "type": "string"
    }
  }
}
