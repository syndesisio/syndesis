<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (C) 2016 Red Hat, Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <groupId>io.syndesis</groupId>
    <artifactId>syndesis-parent</artifactId>
    <version>2.0-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <artifactId>dv-server</artifactId>
  <name>DV Server</name>

  <packaging>jar</packaging>
  <description>Tool that allows creating, editing and managing dynamic VDBs for the Teiid OpenShift Deployment.</description>

  <developers>
    <developer>
      <name>Barry Lafond</name>
      <id>blafond</id>
      <email>blafond@redhat.com</email>
      <organization>Red Hat</organization>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>-6</timezone>
    </developer>
    <developer>
      <name>Steve Hawkins</name>
      <id>shawkins</id>
      <email>shawkins@redhat.com</email>
      <organization>Red Hat</organization>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>-6</timezone>
    </developer>
    <developer>
      <name>Ramesh Reddy</name>
      <id>rareddy</id>
      <email>rareddy@redhat.com</email>
      <organization>Red Hat</organization>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>-6</timezone>
    </developer>
    <developer>
      <name>Mark Drilling</name>
      <id>mdrilling</id>
      <email>mdrillin@redhat.com</email>
      <organization>Red Hat</organization>
      <roles>
        <role>Project Lead</role>
        <role>Developer</role>
      </roles>
      <timezone>-6</timezone>
    </developer>
  </developers>

  <contributors>
  </contributors>

  <issueManagement>
    <system>jira</system>
    <url>http://issues.jboss.org/browse/TEIIDTOOLS</url>
  </issueManagement>

  <properties>
    <!-- Don't fork based on cores, doesn't work nicely in the cloud -->
    <basepom.check.skip-pmd>true</basepom.check.skip-pmd>
    <basepom.check.skip-spotbugs>true</basepom.check.skip-spotbugs>
    <basepom.check.skip-license>true</basepom.check.skip-license>
    <basepom.test.timeout>600</basepom.test.timeout>
    <basepom.git-id.skip>true</basepom.git-id.skip>

    <basepom.check.skip-dependency>true</basepom.check.skip-dependency>
    <basepom.check.skip-dependency-management>true</basepom.check.skip-dependency-management>
    <basepom.check.skip-duplicate-finder>true</basepom.check.skip-duplicate-finder>
	<javac.werror></javac.werror>
    <version.io.opentracing.contrib>1.0.1</version.io.opentracing.contrib>

    <!-- Instruct the build to use only UTF-8 encoding for source code -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <debug.argline />

    <!-- overriding the BOM 1.6 source/target -->
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.compiler.source>1.8</maven.compiler.source>

    <!--Skip long running tests by default -->
    <skipLongRunningTests>true</skipLongRunningTests>

    <!-- PLUGIN BUG: Test dependencies not correctly checked -->
    <managed-deps.checkProfiles>false</managed-deps.checkProfiles>

    <!-- Common dependencies -->
    <version.springfox>2.9.2</version.springfox>
    <shrinkwrap.version>3.1.4</shrinkwrap.version>

    <version.tomcat>9.0.31</version.tomcat>

    <version.io.fabric8.kubernetes-api>3.0.12</version.io.fabric8.kubernetes-api>

    <!-- DO NOT CHANGE VERSION PROPETY NAMES, THESE ARE USED IN CODE At s2i -->
    <!-- this is simply a version no dependencies involved right now -->
    <version.springboot.teiid>${teiid.springboot.version}</version.springboot.teiid>
    <version.mysql>8.0.17</version.mysql>
    <version.postgresql>42.2.9</version.postgresql>
    <version.springboot>${spring-boot.version}</version.springboot>
    <version.mssql>7.4.1.jre8</version.mssql>
    <version.derby>10.14.2.0</version.derby>
    <version.mariadb>2.4.4</version.mariadb>
    <!-- DO NOT CHANGE VERSION PROPETY NAMES, THESE ARE USED IN CODE -->
  </properties>

  <profiles>

    <!--
    =========================================================================
    Profiles (which can and should be combined)
    =========================================================================
    -->

    <!-- Profile for building Docker images -->
    <profile>
      <id>image</id>
      <activation>
        <property>
          <name>::image</name>
        </property>
      </activation>
      <properties>
        <fabric8.generator.name>${image.dv}</fabric8.generator.name>
      </properties>
      <build>
        <defaultGoal>install</defaultGoal>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric8-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>build</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>

    </profile>

  </profiles>

  <build>
    <!-- Write out the app properties to file -->
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.*</include>
        </includes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>fabric8-maven-plugin</artifactId>
          <version>${fabric8.maven.plugin.version}</version>
          <configuration>
            <generator>
                <includes>
                    <include>spring-boot</include>
                </includes>
            </generator>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <delimiters>
            <delimiter>@</delimiter>
          </delimiters>
          <escapeString>\</escapeString>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <forkCount>1</forkCount>
          <reuseForks>false</reuseForks>
          <argLine>-Xmx1024m -XX:MaxPermSize=256m</argLine>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <!-- Common dependencies -->
  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <version>${spring-boot.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      
      <dependency>
        <groupId>org.teiid</groupId>
        <artifactId>teiid-spring-boot-starter</artifactId>
        <version>${version.springboot.teiid}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
          <groupId>io.springfox</groupId>
          <artifactId>springfox-swagger2</artifactId>
          <version>${version.springfox}</version>
      </dependency>
      <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-swagger-ui</artifactId>
        <version>${version.springfox}</version>
      </dependency>

      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-client-bom-with-deps</artifactId>
        <version>${kubernetes.client.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model</artifactId>
        <version>${kubernetes.client.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.shrinkwrap.resolver</groupId>
        <artifactId>shrinkwrap-resolver-bom</artifactId>
        <version>${shrinkwrap.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>io.opentracing.contrib</groupId>
        <artifactId>opentracing-spring-jaeger-web-starter</artifactId>
        <version>${version.io.opentracing.contrib}</version>
      </dependency>

      <dependency>
        <groupId>org.teiid</groupId>
        <artifactId>dv-server</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-client</artifactId>
        <version>${kubernetes.client.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-api</artifactId>
        <version>${version.io.fabric8.kubernetes-api}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>

        <!-- Teiid level dependencies -->
    <dependency>
      <groupId>org.teiid</groupId>
      <artifactId>teiid-common-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.teiid</groupId>
      <artifactId>teiid-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.teiid</groupId>
      <artifactId>teiid-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.teiid</groupId>
      <artifactId>teiid-engine</artifactId>
    </dependency>
    <dependency>
        <groupId>org.teiid</groupId>
        <artifactId>teiid-runtime</artifactId>
        <exclusions>
          <exclusion>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
          </exclusion>
          <exclusion>
            <groupId>xerces</groupId>
            <artifactId>xercesImpl</artifactId>
          </exclusion>
          <exclusion>
            <groupId>xalan</groupId>
            <artifactId>xalan</artifactId>
          </exclusion>
        </exclusions>
    </dependency>
    <dependency>
      <groupId>org.teiid.connectors</groupId>
      <artifactId>translator-jdbc</artifactId>
      <scope>runtime</scope>
    </dependency>
    <!-- Teiid level dependencies -->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-core</artifactId>
    </dependency>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
    </dependency>
    <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-swagger2</artifactId>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
    </dependency>
    <dependency>
        <groupId>jakarta.xml.bind</groupId>
        <artifactId>jakarta.xml.bind-api</artifactId>
    </dependency>
    <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
    </dependency>
    <!-- for commons logging -->
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jcl</artifactId>
    </dependency>
    <!-- for servlet api -->
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-core</artifactId>
      <!-- 
      see https://github.com/spring-projects/spring-framework/issues/22131 
      -->
      <version>${version.tomcat}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-websocket</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-websocket</artifactId>
      <version>${version.tomcat}</version>
    </dependency>

    <dependency>
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-spring-jaeger-web-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
    </dependency>
    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>openshift-client</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.jackson.dataformat</groupId>
          <artifactId>jackson-dataformat-yaml</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>kubernetes-api</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.jackson.dataformat</groupId>
          <artifactId>jackson-dataformat-yaml</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
        <groupId>org.jboss.shrinkwrap</groupId>
        <artifactId>shrinkwrap-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap</groupId>
      <artifactId>shrinkwrap-impl-base</artifactId>
    </dependency>
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
    </dependency>
    <dependency>
        <groupId>org.eclipse.lsp4j</groupId>
        <artifactId>org.eclipse.lsp4j</artifactId>
        <version>0.8.1</version>
    </dependency>
    <dependency>
        <groupId>org.eclipse.lsp4j</groupId>
        <artifactId>org.eclipse.lsp4j.jsonrpc</artifactId>
        <version>0.8.1</version>
    </dependency>
    <dependency>
        <groupId>org.eclipse.lsp4j</groupId>
        <artifactId>org.eclipse.lsp4j.websocket</artifactId>
        <version>0.8.1</version>
    </dependency>
    <dependency>
        <groupId>org.glassfish.tyrus</groupId>
        <artifactId>tyrus-server</artifactId>
        <version>1.15</version>
    </dependency>
    <dependency>
    <groupId>org.glassfish.tyrus</groupId>
        <artifactId>tyrus-container-grizzly-server</artifactId>
        <version>1.15</version>
    </dependency>
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derby</artifactId>
      <scope>runtime</scope>
    </dependency>
    <!-- supported relational data sources -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.mariadb.jdbc</groupId>
      <artifactId>mariadb-java-client</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.teiid</groupId>
      <artifactId>teiid</artifactId>
      <classifier>jdbc</classifier>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.microsoft.sqlserver</groupId>
      <artifactId>mssql-jdbc</artifactId>
      <scope>runtime</scope>
    </dependency> 
    <!-- supported relational data sources -->    
    <dependency>
      <groupId>org.teiid</groupId>
      <artifactId>spring-data-salesforce</artifactId>
      <exclusions>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.teiid</groupId>
      <artifactId>spring-data-mongodb</artifactId>
    </dependency>

    <!-- Required for unit testing the rest resources rather than integration testing -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-depchain</artifactId>
      <type>pom</type>
      <scope>test</scope>
    </dependency>

    <!-- to remove when we're aligned with syndesis on spring-boot -->
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
    </dependency>
  </dependencies>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>

</project>
