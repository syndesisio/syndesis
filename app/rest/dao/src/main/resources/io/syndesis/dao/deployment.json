[
  {
    "kind": "connector",
    "data": {
      "id": "salesforce",
      "name": "Salesforce",
      "description": "Cloud-based Customer Relationship Management",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "tags": [
        "verifier"
      ],
      "properties": {
        "loginUrl": {
          "kind": "property",
          "displayName": "Login Url",
          "group": "security",
          "label": "common,security",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags": [],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "defaultValue": "https://login.salesforce.com",
          "description": "URL of the Salesforce instance used for authentication by default set to https://login.salesforce.com"
        },
        "clientId": {
          "kind": "property",
          "displayName": "Client Id",
          "group": "security",
          "label": "common,security",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags": [
            "oauth-client-id"
          ],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "OAuth Consumer Key of the connected app configured in the Salesforce instance setup. Typically a connected app needs to be configured but one can be provided by installing a package."
        },
        "clientSecret": {
          "kind": "property",
          "displayName": "Client Secret",
          "group": "security",
          "label": "common,security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags": [
            "oauth-client-secret"
          ],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "OAuth Consumer Secret of the connected app configured in the Salesforce instance setup."
        },
        "refreshToken": {
          "kind": "property",
          "displayName": "Refresh Token",
          "group": "security",
          "label": "common,security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags": [],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "Refresh token already obtained in the refresh token OAuth flow. One needs to setup a web application and configure a callback URL to receive the refresh token or configure using the builtin callback at https://login.salesforce.com/services/oauth2/success or https://test.salesforce.com/services/oauth2/success and then retrive the refresh_token from the URL at the end of the flow. Note that in development organizations Salesforce allows hosting the callback web application at localhost."
        },
        "userName": {
          "kind": "property",
          "displayName": "User Name",
          "group": "security",
          "label": "common,security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags": [],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "Username used in OAuth flow to gain access to access token. It's easy to get started with password OAuth flow but in general one should avoid it as it is deemed less secure than other flows."
        },
        "password": {
          "kind": "property",
          "displayName": "Password",
          "group": "security",
          "label": "common,security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags": [],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "Password used in OAuth flow to gain access to access token. It's easy to get started with password OAuth flow but in general one should avoid it as it is deemed less secure than other flows. Make sure that you append security token to the end of the password if using one."
        }
      },
      "actions": [
        {
          "id": "io.syndesis.connector:connector-salesforce-create:latest",
          "name": "New record",
          "description": "Create a new Salesforce record, such as an Account, Contact, or Order.",
          "tags": [
            "dynamic"
          ],
          "pattern": "To",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis.connector:connector-salesforce-create:@syndesis.version@",
            "camelConnectorPrefix": "salesforce-create-sobject",
            "inputDataShape": {
              "kind": "json-schema"
            },
            "outputDataShape": {
              "kind": "java",
              "type": "org.apache.camel.component.salesforce.api.dto.CreateSObjectResult"
            },
            "propertyDefinitionSteps": [
              {
                "name": "Name of the object",
                "description": "Specify the Salesforce object name of the record to create.",
                "properties": {
                  "sObjectName": {
                    "kind": "parameter",
                    "displayName": "Object name",
                    "group": "common",
                    "required": true,
                    "type": "string",
                    "javaType": "java.lang.String",
                    "tags": [],
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "defaultValue": "Contact",
                    "description": "Name of the Salesforce object"
                  }
                }
              }
            ]
          }
        },
        {
          "id": "io.syndesis.connector:connector-salesforce-delete:latest",
          "name": "Delete record",
          "description": "Delete a record from Salesforce.",
          "tags": [
            "dynamic"
          ],
          "pattern": "To",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis.connector:connector-salesforce-delete:@syndesis.version@",
            "camelConnectorPrefix": "salesforce-delete-sobject",
            "inputDataShape": {
              "kind": "java",
              "type": "io.syndesis.connector.salesforce.SalesforceIdentifier"
            },
            "outputDataShape": {
              "kind": "none"
            },
            "propertyDefinitionSteps": [
              {
                "name": "Name of the object",
                "description": "Specify the Salesforce object name of the record to delete.",
                "properties": {
                  "sObjectName": {
                    "kind": "parameter",
                    "displayName": "Object name",
                    "group": "common",
                    "required": true,
                    "type": "string",
                    "javaType": "java.lang.String",
                    "tags": [],
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "defaultValue": "Contact",
                    "description": "Name of the Salesforce object"
                  }
                }
              }
            ]
          }
        },
        {
          "id": "io.syndesis.connector:connector-salesforce-delete-with-id:latest",
          "name": "Delete record by external identifier",
          "description": "Delete a record from Salesforce based on the value of an external identifier.",
          "tags": [
            "dynamic"
          ],
          "pattern": "To",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis.connector:connector-salesforce-delete-with-id:@syndesis.version@",
            "camelConnectorPrefix": "salesforce-delete-sobject-with-id",
            "inputDataShape": {
              "kind": "java",
              "type": "io.syndesis.connector.salesforce.SalesforceIdentifier"
            },
            "outputDataShape": {
              "kind": "none"
            },
            "propertyDefinitionSteps": [
              {
                "name": "Name of the object",
                "description": "Specify the Salesforce object name of the record to delete.",
                "properties": {
                  "sObjectName": {
                    "kind": "parameter",
                    "displayName": "Object name",
                    "group": "common",
                    "required": true,
                    "type": "string",
                    "javaType": "java.lang.String",
                    "tags": [],
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "defaultValue": "Contact",
                    "description": "Name of the Salesforce object"
                  }
                }
              },
              {
                "name": "External identifier field name",
                "description": "Specify the field name of the external identifier.",
                "properties": {
                  "sObjectIdName": {
                    "kind": "parameter",
                    "displayName": "External identifier field",
                    "group": "common",
                    "required": true,
                    "type": "string",
                    "javaType": "java.lang.String",
                    "tags": [],
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "defaultValue": "",
                    "description": "Field name of the external identifier"
                  }
                }
              }
            ]
          }
        },
        {
          "id": "io.syndesis.connector:connector-salesforce-get:latest",
          "name": "Fetch record",
          "description": "Fetches a record from Salesforce by its identifier value.",
          "tags": [
            "dynamic"
          ],
          "pattern": "To",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis.connector:connector-salesforce-get:@syndesis.version@",
            "camelConnectorPrefix": "salesforce-get-sobject",
            "inputDataShape": {
              "kind": "java",
              "type": "io.syndesis.connector.salesforce.SalesforceIdentifier"
            },
            "outputDataShape": {
              "kind": "json-schema"
            },
            "propertyDefinitionSteps": [
              {
                "name": "Name of the object",
                "description": "Specify the Salesforce object name of the record to fetch.",
                "properties": {
                  "sObjectName": {
                    "kind": "parameter",
                    "displayName": "Object name",
                    "group": "common",
                    "required": true,
                    "type": "string",
                    "javaType": "java.lang.String",
                    "tags": [],
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "defaultValue": "Contact",
                    "description": "Name of the Salesforce object"
                  }
                }
              }
            ]
          }
        },
        {
          "id": "io.syndesis.connector:connector-salesforce-get-with-id:latest",
          "name": "Fetch record by external identifier",
          "description": "Fetches a record from Salesforce by the value of an external identifier.",
          "tags": [
            "dynamic"
          ],
          "pattern": "To",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis.connector:connector-salesforce-get-with-id:@syndesis.version@",
            "camelConnectorPrefix": "salesforce-get-sobject-with-id",
            "inputDataShape": {
              "kind": "java",
              "type": "io.syndesis.connector.salesforce.SalesforceIdentifier"
            },
            "outputDataShape": {
              "kind": "json-schema"
            },
            "propertyDefinitionSteps": [
              {
                "name": "Name of the object",
                "description": "Specify the Salesforce object name of the record to fetch.",
                "properties": {
                  "sObjectName": {
                    "kind": "parameter",
                    "displayName": "Object name",
                    "group": "common",
                    "required": true,
                    "type": "string",
                    "javaType": "java.lang.String",
                    "tags": [],
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "defaultValue": "Contact",
                    "description": "Name of the Salesforce object"
                  }
                }
              },
              {
                "name": "External identifier field name",
                "description": "Specify the field name of the external identifier.",
                "properties": {
                  "sObjectIdName": {
                    "kind": "parameter",
                    "displayName": "External identifier field",
                    "group": "common",
                    "required": true,
                    "type": "string",
                    "javaType": "java.lang.String",
                    "tags": [],
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "defaultValue": "",
                    "description": "Field name of the external identifier"
                  }
                }
              }
            ]
          }
        },
        {
          "id": "io.syndesis.connector:connector-salesforce-update:latest",
          "name": "Update record",
          "description": "Update a record on Salesforce.",
          "tags": [
            "dynamic"
          ],
          "pattern": "To",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis.connector:connector-salesforce-update:@syndesis.version@",
            "camelConnectorPrefix": "salesforce-update-sobject",
            "inputDataShape": {
              "kind": "json-schema"
            },
            "outputDataShape": {
              "kind": "none"
            },
            "propertyDefinitionSteps": [
              {
                "name": "Name of the object",
                "description": "Specify the Salesforce object name of the record to update.",
                "properties": {
                  "sObjectName": {
                    "kind": "parameter",
                    "displayName": "Object name",
                    "group": "common",
                    "required": true,
                    "type": "string",
                    "javaType": "java.lang.String",
                    "tags": [],
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "defaultValue": "Contact",
                    "description": "Name of the Salesforce object"
                  }
                }
              }
            ]
          }
        },
        {
          "id": "io.syndesis.connector:connector-salesforce-upsert:latest",
          "name": "Create or update record",
          "description": "Create or update a record on Salesforce.",
          "tags": [
            "dynamic"
          ],
          "pattern": "To",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis.connector:connector-salesforce-upsert:@syndesis.version@",
            "camelConnectorPrefix": "salesforce-upsert-sobject",
            "inputDataShape": {
              "kind": "json-schema"
            },
            "outputDataShape": {
              "kind": "java",
              "type": "org.apache.camel.component.salesforce.api.dto.CreateSObjectResult"
            },
            "propertyDefinitionSteps": [
              {
                "name": "Name of the object",
                "description": "Specify the Salesforce object name of the record to create or update.",
                "properties": {
                  "sObjectName": {
                    "kind": "parameter",
                    "displayName": "Object name",
                    "group": "common",
                    "required": true,
                    "type": "string",
                    "javaType": "java.lang.String",
                    "tags": [],
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "defaultValue": "Contact",
                    "description": "Name of the Salesforce object"
                  }
                }
              },
              {
                "name": "Identifier field name",
                "description": "Specify the field name that holds the identifying value.",
                "properties": {
                  "sObjectIdName": {
                    "kind": "parameter",
                    "displayName": "Identifier field",
                    "group": "common",
                    "required": true,
                    "type": "string",
                    "javaType": "java.lang.String",
                    "tags": [],
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "defaultValue": "",
                    "description": "Field name of the identifier"
                  }
                }
              }
            ]
          }
        },
        {
          "id": "io.syndesis.connector:connector-salesforce-on-create:latest",
          "name": "On create",
          "description": "Get notified when a Salesforce record is created.",
          "tags": [
            "dynamic"
          ],
          "pattern": "From",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis.connector:connector-salesforce-on-create:@syndesis.version@",
            "camelConnectorPrefix": "salesforce-on-create",
            "inputDataShape": {
              "kind": "none"
            },
            "outputDataShape": {
              "kind": "json-schema"
            },
            "propertyDefinitionSteps": [
              {
                "name": "Name of the object",
                "description": "Specify the Salesforce object name for which to receive notification when records are created.",
                "properties": {
                  "sObjectName": {
                    "kind": "parameter",
                    "displayName": "Object name",
                    "group": "common",
                    "required": true,
                    "type": "string",
                    "javaType": "java.lang.String",
                    "tags": [],
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "defaultValue": "Contact",
                    "description": "Name of the Salesforce object"
                  }
                }
              }
            ]
          }
        },
        {
          "id": "io.syndesis.connector:connector-salesforce-on-update:latest",
          "name": "On update",
          "description": "Get notified when a Salesforce record is updated.",
          "tags": [
            "dynamic"
          ],
          "pattern": "From",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis.connector:connector-salesforce-on-update:@syndesis.version@",
            "camelConnectorPrefix": "salesforce-on-update",
            "inputDataShape": {
              "kind": "none"
            },
            "outputDataShape": {
              "kind": "json-schema"
            },
            "propertyDefinitionSteps": [
              {
                "name": "Name of the object",
                "description": "Specify the Salesforce object name for which to receive notification when records are updated.",
                "properties": {
                  "sObjectName": {
                    "kind": "parameter",
                    "displayName": "Object name",
                    "group": "common",
                    "required": true,
                    "type": "string",
                    "javaType": "java.lang.String",
                    "tags": [],
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "defaultValue": "Contact",
                    "description": "Name of the Salesforce object"
                  }
                }
              }
            ]
          }
        },
        {
          "id": "io.syndesis.connector:connector-salesforce-on-delete:latest",
          "name": "On delete",
          "description": "Get notified when a Salesforce record is deleted.",
          "tags": [
            "dynamic"
          ],
          "pattern": "From",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis.connector:connector-salesforce-on-delete:@syndesis.version@",
            "camelConnectorPrefix": "salesforce-on-delete",
            "inputDataShape": {
              "kind": "none"
            },
            "outputDataShape": {
              "kind": "java",
              "type": "io.syndesis.connector.salesforce.SalesforceIdentifier"
            },
            "propertyDefinitionSteps": [
              {
                "name": "Name of the object",
                "description": "Specify the Salesforce object name for which to receive notification when records are deleted.",
                "properties": {
                  "sObjectName": {
                    "kind": "parameter",
                    "displayName": "Object name",
                    "group": "common",
                    "required": true,
                    "type": "string",
                    "javaType": "java.lang.String",
                    "tags": [],
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "defaultValue": "Contact",
                    "description": "Name of the Salesforce object"
                  }
                }
              }
            ]
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "activemq",
      "name": "AMQ",
      "description": "AMQ Message Broker",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "tags": [
        "verifier"
      ],
      "properties": {
        "brokerUrl": {
          "kind": "property",
          "displayName": "Broker URL",
          "group": "common",
          "label": "common",
          "required": true,
          "componentProperty": true,
          "type": "string",
          "javaType": "java.lang.String",
          "deprecated": false,
          "secret": false,
          "description": "Location to send data to or obtain data from."
        },
        "username": {
          "kind": "property",
          "displayName": "User Name",
          "group": "security",
          "label": "common,security",
          "required": false,
          "componentProperty": true,
          "type": "string",
          "javaType": "java.lang.String",
          "deprecated": false,
          "secret": false,
          "description": "Access the broker with this user’s authorization credentials."
        },
        "password": {
          "kind": "property",
          "displayName": "Password",
          "group": "security",
          "label": "common,security",
          "required": false,
          "componentProperty": true,
          "type": "string",
          "javaType": "java.lang.String",
          "deprecated": false,
          "secret": true,
          "description": "Password for the specified user account."
        },
        "clientID" : {
          "kind" : "property",
          "displayName" : "Client ID",
          "group" : "security",
          "label" : "common,security",
          "required" : false,
          "componentProperty": true,
          "type" : "string",
          "javaType" : "java.lang.String",
          "deprecated" : false,
          "secret" : false,
          "description" : "Required for connections to close and reopen without missing messages. Connection destination must be a topic."
        },
        "skipCertificateCheck" : {
          "kind" : "property",
          "displayName" : "Skip Certificate Check",
          "group" : "security",
          "label" : "common,security",
          "required" : false,
          "componentProperty": true,
          "type" : "string",
          "javaType" : "java.lang.String",
          "enum": [
            {
              "value": "false",
              "label": "Disable"
            },
            {
              "value": "true",
              "label": "Enable"
            }
          ],
          "defaultValue" : "false",
          "deprecated" : false,
          "secret" : false,
          "description" : "For convenience in only development environments. Do not set for secure production environments."
        },
        "brokerCertificate" : {
          "kind" : "property",
          "displayName" : "Broker Certificate",
          "group" : "security",
          "label" : "common,security",
          "required" : false,
          "componentProperty": true,
          "type" : "string",
          "javaType" : "java.lang.String",
          "deprecated" : false,
          "secret" : false,
          "description" : "AMQ Broker X.509 PEM Certificate"
        },
        "clientCertificate" : {
          "kind" : "property",
          "displayName" : "Client Certificate",
          "group" : "security",
          "label" : "common,security",
          "required" : false,
          "componentProperty": true,
          "type" : "string",
          "javaType" : "java.lang.String",
          "deprecated" : false,
          "secret" : false,
          "description" : "AMQ Client X.509 PEM Certificate"
        }
      },
      "actions": [
        {
          "id": "io.syndesis.connector:connector-activemq-publish:latest",
          "name": "Publish messages",
          "description": "Send data to the destination you specify.",
          "tags": [],
          "pattern": "To",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis.connector:connector-activemq-publish:@syndesis-connectors.version@",
            "camelConnectorPrefix": "activemq-publish",
            "inputDataShape": {
              "kind": "any"
            },
            "outputDataShape": {
              "kind": "none"
            },
            "propertyDefinitionSteps": [
              {
                "name": "Select the JMS Destination",
                "description": "Specify AMQ Connection Factory properties, including Queue or Topic Name",
                "properties": {
                  "destinationName": {
                    "kind": "path",
                    "displayName": "Destination Name",
                    "group": "common",
                    "required": true,
                    "type": "string",
                    "javaType": "java.lang.String",
                    "tags": [],
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "description": "Name of the queue or topic to send data to."
                  },
                  "destinationType": {
                    "kind": "path",
                    "displayName": "Destination Type",
                    "group": "common",
                    "required": false,
                    "type": "string",
                    "javaType": "java.lang.String",
                    "enum": [
                      {
                        "value": "topic",
                        "label": "Topic"
                      },
                      {
                        "value": "queue",
                        "label": "Queue"
                      }
                    ],
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "defaultValue": "topic",
                    "description": "By default, the destination is a topic."
                  },
                  "persistent": {
                    "kind": "parameter",
                    "displayName": "Persistent",
                    "group": "producer",
                    "label": "producer",
                    "required": false,
                    "type": "boolean",
                    "javaType": "boolean",
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "defaultValue": true,
                    "description": "Message delivery is guaranteed when Persistent is selected."
                  }
                }
              }
            ]
          }
        },
        {
          "id": "io.syndesis.connector:connector-activemq-subscribe:latest",
          "name": "Subscribe for messages",
          "description": "Receive data from the destination you specify.",
          "tags": [],
          "pattern": "From",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis.connector:connector-activemq-subscribe:@syndesis-connectors.version@",
            "camelConnectorPrefix": "activemq-subscribe",
            "inputDataShape": {
              "kind": "none"
            },
            "outputDataShape": {
              "kind": "any"
            },
            "propertyDefinitionSteps": [
              {
                "name": "Select the JMS Destination",
                "description": "Specify AMQ Connection Factory properties, including Queue or Topic Name",
                "properties": {
                  "destinationName": {
                    "kind": "path",
                    "displayName": "Destination Name",
                    "group": "common",
                    "required": true,
                    "type": "string",
                    "javaType": "java.lang.String",
                    "tags": [],
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "description": "Name of the queue or topic to receive data from."
                  },
                  "destinationType": {
                    "kind": "path",
                    "displayName": "Destination Type",
                    "group": "common",
                    "required": false,
                    "type": "string",
                    "javaType": "java.lang.String",
                    "enum": [
                      {
                        "value": "topic",
                        "label": "Topic"
                      },
                      {
                        "value": "queue",
                        "label": "Queue"
                      }
                    ],
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "defaultValue": "topic",
                    "description": "By default, the destination is a topic."
                  },
                  "durableSubscriptionId": {
                    "kind": "parameter",
                    "displayName": "Durable Subscription ID",
                    "group": "consumer",
                    "label": "consumer",
                    "required": false,
                    "type": "string",
                    "javaType": "java.lang.String",
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "description": "Set the ID that lets connections close and reopen with missing messages. Connection type must be a topic."
                  },
                  "messageSelector": {
                    "kind": "parameter",
                    "displayName": "Message Selector",
                    "group": "consumer (advanced)",
                    "label": "consumer,advanced",
                    "required": false,
                    "type": "string",
                    "javaType": "java.lang.String",
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "description": "Specify a filter expression to receive only data that meets certain criteria."
                  }
                }
              }
            ]
          }
        },
        {
          "id": "io.syndesis.connector:connector-activemq-request:latest",
          "name": "Request response using messages",
          "description": "Send data to the destination you specify and receive a response.",
          "tags": [],
          "pattern": "To",
          "actionType": "connector",
          "descriptor": {
            "camelConnectorGAV": "io.syndesis.connector:connector-activemq-request:@syndesis-connectors.version@",
            "camelConnectorPrefix": "activemq-request",
            "inputDataShape": {
              "kind": "any"
            },
            "outputDataShape": {
              "kind": "any"
            },
            "propertyDefinitionSteps": [
              {
                "name": "Select the JMS Destination",
                "description": "Specify AMQ Connection Factory properties, including Queue or Topic Name",
                "properties": {
                  "destinationName": {
                    "kind": "path",
                    "displayName": "Name of the queue or topic to send data to.",
                    "group": "common",
                    "required": true,
                    "type": "string",
                    "javaType": "java.lang.String",
                    "tags": [],
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "description": "DestinationName is a JMS queue or topic name. By default the destinationName is interpreted as a queue name."
                  },
                  "destinationType": {
                    "kind": "path",
                    "displayName": "Destination Type",
                    "group": "common",
                    "required": false,
                    "type": "string",
                    "javaType": "java.lang.String",
                    "enum": [
                      {
                        "value": "topic",
                        "label": "Topic"
                      },
                      {
                        "value": "queue",
                        "label": "Queue"
                      }
                    ],
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "defaultValue": "topic",
                    "description": "By default, the destination is a topic."
                  },
                  "messageSelector": {
                    "kind": "parameter",
                    "displayName": "Message Selector",
                    "group": "consumer (advanced)",
                    "label": "consumer,advanced",
                    "required": false,
                    "type": "string",
                    "javaType": "java.lang.String",
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "description": "Specify a filter expression to receive only responses that meet certain criteria."
                  },
                  "namedReplyTo": {
                    "kind": "parameter",
                    "displayName": "Named Reply To",
                    "group": "producer",
                    "label": "producer",
                    "required": false,
                    "type": "string",
                    "javaType": "java.lang.String",
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "description": "The destination sends the response to this queue or topic."
                  },
                  "persistent": {
                    "kind": "parameter",
                    "displayName": "Persistent",
                    "group": "producer",
                    "label": "producer",
                    "required": false,
                    "type": "boolean",
                    "javaType": "boolean",
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "defaultValue": true,
                    "description": "Message delivery is guaranteed when Persistent is selected."
                  },
                  "responseTimeOut": {
                    "kind": "parameter",
                    "displayName": "Response Time Out",
                    "group": "producer (advanced)",
                    "label": "producer,advanced",
                    "required": false,
                    "type": "integer",
                    "javaType": "long",
                    "deprecated": false,
                    "secret": false,
                    "componentProperty": false,
                    "defaultValue": 5000,
                    "description": "Amount of time a connection waits for a response message before throwing a runtime exception."
                  }
                }
              }
            ]
          }
        }
      ]
    }
  },
  {
    "kind": "connection",
    "data": {
      "id": "5",
      "name": "PostgresDB",
      "description": "Connection to SampleDB",
      "tags": [
        "sampledb"
      ],
      "icon": "fa-database",
      "connectorId": "sql",
      "configuredProperties": {
        "url": "jdbc:postgresql://syndesis-db:5432/sampledb",
        "user": "sampledb",
        "password": "@ENC:POSTGRESQL_SAMPLEDB_PASSWORD@",
        "schema": "sampledb"
      }
    }
  },
  {
    "kind": "connector-template",
    "data": {
      "id": "swagger-connector-template",
      "name": "Swagger API Connector",
      "description": "Swagger API Connector",
      "icon": "fa-link",
      "camelConnectorGAV": "io.syndesis.connector:connector-rest-swagger:@syndesis.version@",
      "camelConnectorPrefix": "swagger-operation",
      "connectorGroup" : {
        "id": "swagger-connector-template"
      },
      "properties": {
        "specification": {
          "kind": "property",
          "displayName": "Specification",
          "group": "producer",
          "label": "producer",
          "required": true,
          "type": "file",
          "javaType": "java.lang.String",
          "tags": [
            "blob"
          ],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "Provide a Swagger specification that describes a REST API. The API can be hosted anywhere. The Swagger specification must conform to the OpenAPI (the new name for Swagger) specification."
        },
        "host": {
          "kind": "property",
          "displayName": "Host",
          "group": "producer",
          "label": "producer",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags": [],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "Scheme hostname and port to direct the HTTP requests to in the form of https://hostname:port. Can be configured at the endpoint component or in the correspoding REST configuration in the Camel Context. If you give this component a name (e.g. petstore) that REST configuration is consulted first rest-swagger next and global configuration last. If set overrides any value found in the Swagger specification RestConfiguration. Can be overriden in endpoint configuration."
        },
        "basePath": {
          "kind": "property",
          "displayName": "Base path",
          "group": "producer",
          "label": "producer",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags": [],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "API basePath for example /v2. Default is unset if set overrides the value present in Swagger specification."
        },
        "authenticationType": {
          "kind": "property",
          "displayName": "Authentication Type",
          "group": "producer",
          "label": "producer",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags": [
            "authentication-type"
          ],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "Type of authentication used to connect to the API"
        },
        "authorizationEndpoint": {
          "kind": "property",
          "displayName": "OAuth Authorization Endpoint URL",
          "group": "producer",
          "label": "producer",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags": [
            "oauth-authorization-url"
          ],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "URL for the start of the OAuth flow"
        },
        "tokenEndpoint": {
          "kind": "property",
          "displayName": "OAuth Token Endpoint URL",
          "group": "producer",
          "label": "producer",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags": [
            "oauth-access-token-url"
          ],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "URL to fetch the OAuth Access token"
        },
        "oauthScopes": {
          "kind": "property",
          "displayName": "OAuth Scopes",
          "group": "producer",
          "label": "producer",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags": [
            "oauth-scope"
          ],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "URL to fetch the OAuth Access token"
        }
      },
      "connectorProperties": {
        "host": {
          "kind": "property",
          "displayName": "Host",
          "group": "producer",
          "label": "producer",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags": [],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "Scheme hostname and port to direct the HTTP requests to in the form of https://hostname:port. Can be configured at the endpoint component or in the correspoding REST configuration in the Camel Context. If you give this component a name (e.g. petstore) that REST configuration is consulted first rest-swagger next and global configuration last. If set overrides any value found in the Swagger specification RestConfiguration. Can be overriden in endpoint configuration."
        },
        "basePath": {
          "kind": "property",
          "displayName": "Base path",
          "group": "producer",
          "label": "producer",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags": [],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "API basePath for example /v2. Default is unset if set overrides the value present in Swagger specification."
        },
        "authenticationType": {
          "kind": "property",
          "displayName": "Authentication Type",
          "group": "producer",
          "label": "producer",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags": [
            "authentication-type"
          ],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "Type of authentication used to connect to the API"
        },
        "clientId": {
          "kind": "property",
          "displayName": "OAuth Client ID",
          "group": "producer",
          "label": "producer",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags": [
            "oauth-client-id"
          ],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "OAuth Client ID, sometimes called Consumer Key"
        },
        "clientSecret": {
          "kind": "property",
          "displayName": "OAuth Client Secret",
          "group": "producer",
          "label": "producer",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags": [
            "oauth-client-secret"
          ],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "OAuth Client Secret, sometimes called Consumer Secret"
        },
        "accessToken": {
          "kind": "property",
          "displayName": "OAuth Access token",
          "group": "producer",
          "label": "producer",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags": [
            "oauth-access-token"
          ],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "OAuth Access token"
        },
        "authorizationEndpoint": {
          "kind": "property",
          "displayName": "OAuth Authorization Endpoint URL",
          "group": "producer",
          "label": "producer",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags": [
            "oauth-authorization-url"
          ],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "URL for the start of the OAuth flow"
        },
        "tokenEndpoint": {
          "kind": "property",
          "displayName": "OAuth Token Endpoint URL",
          "group": "producer",
          "label": "producer",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags": [
            "oauth-access-token-url"
          ],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "URL to fetch the OAuth Access token"
        },
        "oauthScopes": {
          "kind": "property",
          "displayName": "OAuth Scopes",
          "group": "producer",
          "label": "producer",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags": [
            "oauth-scope"
          ],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "URL to fetch the OAuth Access token"
        },
        "specification": {
          "kind": "property",
          "displayName": "Specification",
          "group": "producer",
          "label": "producer",
          "required": false,
          "type": "hidden",
          "javaType": "java.lang.String",
          "tags": [
            "upload",
            "url"
          ],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "Swagger specification of the service"
        },
        "username": {
          "kind": "property",
          "displayName": "Username",
          "group": "producer",
          "label": "producer",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "Username to authenticate with"
        },
        "password": {
          "kind": "property",
          "displayName": "Password",
          "group": "producer",
          "label": "producer",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "Password to authenticate with"
        }
      }
    }
  }
]
