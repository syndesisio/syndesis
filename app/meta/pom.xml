<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (C) 2016 Red Hat, Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.syndesis</groupId>
    <artifactId>syndesis-parent</artifactId>
    <version>1.14.0-20220527</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <groupId>io.syndesis.meta</groupId>
  <artifactId>meta</artifactId>
  <name>Meta</name>
  <properties>
    <license.dir>${project.basedir}/src/main/resources/licenses</license.dir>
    <license.output.dir>${project.build.directory}/licenses</license.output.dir>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Redefine Activemq deps to override ones from spring-boot pom import -->
      <dependency>
        <groupId>org.apache.activemq</groupId>
        <artifactId>activemq-client</artifactId>
        <version>${activemq.version}</version>
        <exclusions>
          <!-- avoid conflict with AMQP connector's JMS 2.0 dependency -->
          <exclusion>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-jms_1.1_spec</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-bom</artifactId>
        <version>${netty.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-java-sdk-bom</artifactId>
        <version>${aws-java-sdk.version}</version>
        <type>pom</type>
        <scope>import</scope>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-bom</artifactId>
        <version>${jetty.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>

    <!-- === Internal dependencies (don't touch without discussion) ========================== -->

    <dependency>
      <groupId>io.syndesis.common</groupId>
      <artifactId>common-util</artifactId>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-support-verifier</artifactId>
    </dependency>

    <dependency>
      <groupId>io.syndesis.common</groupId>
      <artifactId>common-model</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- ===================================================================================== -->

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-undertow</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- =========================================================== -->

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-autoconfigure</artifactId>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jdk8</artifactId>
    </dependency>

    <dependency>
      <groupId>io.swagger.core.v3</groupId>
      <artifactId>swagger-jaxrs2</artifactId>
    </dependency>

    <dependency>
      <groupId>jakarta.servlet</groupId>
      <artifactId>jakarta.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-core-spi</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-multipart-provider</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-spring-boot-starter</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.spec.javax.ws.rs</groupId>
      <artifactId>jboss-jaxrs-api_2.1_spec</artifactId>
    </dependency>

    <dependency>
      <groupId>org.hibernate.validator</groupId>
      <artifactId>hibernate-validator</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.immutables</groupId>
      <artifactId>value</artifactId>
      <classifier>annotations</classifier>
    </dependency>

    <!-- === Micrometer ================================================================== -->

    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-core</artifactId>
    </dependency>

    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>

    <!-- === Connectors ================================================================== -->

    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-core</artifactId>
    </dependency>

    <!-- Redefine Activemq deps to override ones from spring-boot pom import -->
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-client</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-openwire-legacy</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-activemq</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-amqp</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-ftp</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-gmail</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-kafka</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-sftp</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-dropbox</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-aws-ddb</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-aws-s3</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-aws-sns</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-aws-sqs</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-twitter</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-sql</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-mqtt</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-http</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-slack</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-fhir</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-salesforce</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-servicenow</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-timer</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-log</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-telegram</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-irc</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-google-calendar</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-google-sheets</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-kudu</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-odata</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-odata-v2</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-flow</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-email</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <!-- Needed by Guava at compile time -->
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-box</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-jira</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>io.syndesis.connector</groupId>
      <artifactId>connector-mongodb</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- === Testing Dependencies ======================================================== -->

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.skyscreamer</groupId>
      <artifactId>jsonassert</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.vaadin.external.google</groupId>
      <artifactId>android-json</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-test</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <layout>ZIP</layout>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
              <goal>build-info</goal>
            </goals>
          </execution>
          <execution>
            <id>default-cli</id>
            <goals>
              <goal>run</goal>
            </goals>
            <phase />
            <configuration>
              <jvmArguments>-server -Xms256m -Xmx512m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=9999 -Dserver.port=9090 -Dmanagement.server.port=9091 -DLOADER_HOME=target</jvmArguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Resteasy dependency has a duplication in org.jboss.resteasy:resteasy-client:4.5.6.Final and org.jboss.resteasy:resteasy-client-api:4.5.6.Final -->
      <plugin>
        <groupId>org.basepom.maven</groupId>
        <artifactId>duplicate-finder-maven-plugin</artifactId>
        <configuration>
          <ignoredResourcePatterns>
            <ignoredResourcePattern>org/jboss/resteasy/client/jaxrs/i18n/Messages.i18n_en.properties</ignoredResourcePattern>
            <ignoredResourcePattern>org/jboss/resteasy/client/jaxrs/i18n/Messages.i18n_xx.properties</ignoredResourcePattern>
          </ignoredResourcePatterns>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <additionalClasspathElements>
                <!-- workaround suggested in https://github.com/spring-projects/spring-boot/issues/6254 -->
                <additionalClasspathElement>${project.build.outputDirectory}</additionalClasspathElement>
              </additionalClasspathElements>
              <reuseForks>true</reuseForks>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <!-- this profile must be kept in sync with image:kubernetes profile -->
      <id>image:openshift</id>
      <activation>
        <property>
          <name>build.mode</name>
          <value>openshift</value>
        </property>
      </activation>
      <properties>
        <jkube.generator.name>${image.meta}</jkube.generator.name>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.eclipse.jkube</groupId>
            <artifactId>openshift-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>default-cli</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <generator>
                    <config>
                      <spring-boot>
                        <from>${java.base.image}</from>
                      </spring-boot>
                    </config>
                  </generator>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- this profile must be kept in sync with image:openshift profile -->
      <id>image:kubernetes</id>
      <activation>
        <property>
          <name>build.mode</name>
          <value>kubernetes</value>
        </property>
      </activation>
      <properties>
        <jkube.generator.name>${image.meta}</jkube.generator.name>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.eclipse.jkube</groupId>
            <artifactId>kubernetes-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>default-cli</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <generator>
                    <config>
                      <spring-boot>
                        <from>${java.base.image}</from>
                      </spring-boot>
                    </config>
                  </generator>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>generate-licenses-xml</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>aggregate-download-licenses</goal>
                </goals>
                <phase>generate-resources</phase>
                <configuration>
                  <licensesOutputDirectory>${license.dir}/licenses</licensesOutputDirectory>
                  <licensesOutputFile>${license.dir}/licenses.xml</licensesOutputFile>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
