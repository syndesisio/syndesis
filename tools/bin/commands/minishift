#!/bin/bash

minishift::description() {
    echo "Initialize and manage a Minishift developer environment"
}

minishift::usage() {
    cat <<EOT
    --install                 Install templates to a running Minishift.
-p  --project                 Install into this project. Delete this project if it already exists
    --reset                   Reset the minishift installation by
                              'minishift delete && minishift start'.
    --full-reset              Full reset by
                              'minishift stop && rm -rf ~/.minishift && minishift start'
    --memory <mem>            How much memory to use when doing a reset. Default: 4GB
    --cpus <nr cpus>          How many CPUs to use when doing a reset. Default: 2
    --disk-size <size>        How many disk space to use when doing a reset. Default: 20GB
    --show-logs               Show minishift logs during startup
    --openshift-version <ver> Set OpenShift version to use when reseting (default: v3.7.0)
                              already existing for --install.
                              Default project: "syndesis"
-i  --image-mode <mode>       Which templates to install: "docker" for plain images,
                              "openshift" for image streams (default: "openshift")
-o  --open                    Open Syndesis in the browser
EOT
}


minishift::run() {
    source "$(basedir)/commands/util/openshift_funcs"

    if [ $(hasflag --open -o) ]; then
        open_url "$(minishift openshift service syndesis-oauthproxy --url)"
    fi
    if [ $(hasflag --full-reset) ] || [ $(hasflag --reset) ]; then
        # Only warning if minishift is not installed
        minishift delete --clear-cache --force
        if [ $(hasflag --full-reset) ] && [ -d ~/.minishift ]; then
            rm -rf ~/.minishift
        fi
        local memory=$(readopt --memory)
        local cpus=$(readopt --cpus)
        local disksize=$(readopt --disk-size)
        local show_logs_arg=""
        local openshift_version=$(readopt --openshift-version)
        if [ $(hasflag --show-logs --show-log) ]; then
            show_logs_args="--show-libmachine-logs=true "
        fi
        minishift start ${show_logs_arg:- }--memory ${memory:-4912} --cpus ${cpus:-2} --disk-size ${disksize:-20GB} --openshift-version ${openshift_version:-v3.7.0}
    fi

    if [ $(hasflag --install) ]; then

        # Switch to minishift to be safe when deleting projects
        oc config use-context minishift

        local project=$(readopt --project -p)
        if [ -n "${project}" ]; then
            recreate_project $project
        fi

        basedir=$(appdir)
        check_error "$basedir"

        create_oauthclient

        local template="syndesis-restricted"
        local image_mode=$(readopt --image-mode -i)
        if [ "$image_mode" == "docker" ] || [ $(hasflag --docker) ]; then
            template="syndesis-dev-restricted"
        fi

        create_and_apply_template "syndesis.$(minishift ip).nip.io" "$template"

        if [ ${template} = "syndesis-restricted" ]; then
          wait_for_syndesis_to_be_ready
          patch_imagestreams_for_initial_image
        fi
    fi
}
