- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: syndesis-db-metrics-config
    labels:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/type: infrastructure
      syndesis.io/component: syndesis-db-metrics
  data:
    queries.yaml: |
        pg_database:
          query: " SELECT pg_database.datname, pg_database_size(pg_database.datname) as size FROM pg_database"
          metrics:
            - datname:
                usage: "LABEL"
                description: "Name of the database"
            - size:
                usage: "GAUGE"
                description: "Disk space used by the database"

- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: syndesis-db-metrics
    labels:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/type: infrastructure
      syndesis.io/component: syndesis-db-metrics
  spec:
    replicas: 1
    selector:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/component: syndesis-db-metrics
    strategy:
      type: Recreate
      resources:
        limits:
          memory: "256Mi"
        requests:
          memory: "20Mi"
    template:
      metadata:
        labels:
          app: syndesis
          syndesis.io/app: syndesis
          syndesis.io/type: infrastructure
          syndesis.io/component: syndesis-db-metrics
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "9187"
      spec:
        containers:
        - capabilities: {}
          env:
          - name: DATA_SOURCE_NAME
            value: postgresql://${POSTGRESQL_USER}:${POSTGRESQL_PASSWORD}@syndesis-db:5432/syndesis?sslmode=disable
          - name: PG_EXPORTER_EXTEND_QUERY_PATH
            value: /etc/postgres/exporter/queries.yaml
{{^WithDockerImages}}
          image: ' '
{{/WithDockerImages}}{{#WithDockerImages}}
          image: ${SYNDESIS_REGISTRY}/{{Images.PostgresExporterImagePrefix}}/{{ Images.Support.PostgresExporter }}:{{ Tags.PostgresExporter }}
{{/WithDockerImages}}
          imagePullPolicy: IfNotPresent
          name: syndesis-db-metrics
          livenessProbe:
            failureThreshold: 5
            httpGet:
              port: 9187
              path: /metrics
            initialDelaySeconds: 60
          readinessProbe:
            failureThreshold: 5
            httpGet:
              port: 9187
              path: /metrics
            initialDelaySeconds: 30
          ports:
          - containerPort: 9187
            name: prometheus
          resources:
            limits:
              memory: 256Mi
            requests:
              memory: 20Mi
          volumeMounts:
          - mountPath: /etc/postgres/exporter
            name: syndesis-db-metrics-config
        volumes:
        - name: syndesis-db-metrics-config
          configMap:
            name: syndesis-db-metrics-config
    triggers:
{{^WithDockerImages}}
    - imageChangeParams:
        automatic: true
        containerNames:
        - syndesis-db-metrics
        from:
          kind: ImageStreamTag
          name: {{ Images.Support.PostgresExporter }}:{{ Tags.PostgresExporter }}
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: ImageChange
{{/WithDockerImages}}
    - type: ConfigChange
