- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/type: infrastructure
      syndesis.io/component: syndesis-meta
    name: syndesis-meta
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
      name: http
    selector:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/component: syndesis-meta
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: syndesis-meta
    labels:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/type: infrastructure
      syndesis.io/component: syndesis-meta
  spec:
    accessModes:
    - {{.Syndesis.Components.Meta.Resources.VolumeAccessMode}}
    resources:
      requests:
        storage: {{.Syndesis.Components.Meta.Resources.VolumeCapacity}}
{{- if .Syndesis.Components.Meta.Resources.VolumeStorageClass}}
    storageClassName: {{.Syndesis.Components.Meta.Resources.VolumeStorageClass}}
{{- end}}
{{- if .Syndesis.Components.Meta.Resources.VolumeName}}
    volumeName: {{.Syndesis.Components.Meta.Resources.VolumeName}}
{{end}}
{{- if .Syndesis.Components.Meta.Resources.VolumeLabels}}
    selector:
      matchLabels:
      {{- range $key, $value := .Syndesis.Components.Meta.Resources.VolumeLabels}}
        {{ $key }}: {{ $value }}
      {{- end }}
{{- end}}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/type: infrastructure
      syndesis.io/component: syndesis-meta
    name: syndesis-meta
  spec:
    replicas: 1
    selector:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/component: syndesis-meta
    strategy:
      resources:
        limits:
          memory: "256Mi"
        requests:
          memory: "20Mi"
      type: Recreate
    template:
      metadata:
        labels:
          app: syndesis
          com.company: Red_Hat
          rht.prod_name: Red_Hat_Integration
          rht.prod_ver: "{{.Version}}"
          rht.comp: Fuse
          rht.comp_ver: "{{.Version}}"
          rht.subcomp: syndesis-meta
          rht.subcomp_t: infrastructure
          syndesis.io/app: syndesis
          syndesis.io/type: infrastructure
          syndesis.io/component: syndesis-meta
      spec:
        serviceAccountName: syndesis-server
        containers:
        - name: syndesis-meta
          env:
          - name: JAVA_APP_DIR
            value: /deployments
          - name: LOADER_HOME
            value: /deployments/ext
          - name: JAVA_OPTIONS
            value: "-Djava.net.preferIPv4Stack=true -Duser.home=/tmp {{.Syndesis.Components.Meta.JavaOptions}}"
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
{{if .Syndesis.Addons.Jaeger.Enabled}}
          - name: JAEGER_ENDPOINT
        {{- if .Syndesis.Addons.Jaeger.CollectorUri}}
            value: "{{.Syndesis.Addons.Jaeger.CollectorUri}}"
        {{- else}}
            value: "http://syndesis-jaeger-collector:14268/api/traces"
        {{- end}}
          - name: JAEGER_SAMPLER_TYPE
            value: "{{.Syndesis.Addons.Jaeger.SamplerType}}"
          - name: JAEGER_SAMPLER_PARAM
            value: "{{.Syndesis.Addons.Jaeger.SamplerParam}}"
{{end}}
{{if .DevSupport}}
          - name: JAVA_DEBUG
            value: "true"
          image: ' '
{{else}}
          image: '{{ .Syndesis.Components.Meta.Image }}'
{{end}}
          imagePullPolicy: Always
          readinessProbe:
            httpGet:
              path: /health
              port: 8181
              scheme: HTTP
            initialDelaySeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8181
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 20
            failureThreshold: 5
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8181
            name: metrics
          - containerPort: 9779
            name: prometheus
            protocol: TCP
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          resources:
            limits:
              memory: {{.Syndesis.Components.Meta.Resources.Limit.Memory}}
              cpu: {{.Syndesis.Components.Meta.Resources.Limit.CPU}}
            requests:
              memory: {{.Syndesis.Components.Meta.Resources.Request.Memory}}
              cpu: {{.Syndesis.Components.Meta.Resources.Request.CPU}}
          # spring-boot automatically picks up application.yml from ./config
          workingDir: /deployments
          volumeMounts:
          - name: config-volume
            mountPath: /deployments/config
          - name: ext-volume
            mountPath: /deployments/ext
        volumes:
        - name: ext-volume
          persistentVolumeClaim:
            claimName: syndesis-meta
        - name: config-volume
          configMap:
            name: syndesis-meta-config
    triggers:
    - type: ConfigChange
{{if .DevSupport}}
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - syndesis-meta
        from:
          kind: ImageStreamTag
          name: syndesis-meta:latest
          namespace: {{.OpenShiftProject}}

- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: syndesis-meta
    labels:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/type: infrastructure
      syndesis.io/component: syndesis-meta
  spec:
    tags:
    - name: "latest"
      from:
        kind: ImageStreamTag
        name: 'syndesis-meta:latest'
{{end}}

- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/type: infrastructure
      syndesis.io/component: syndesis-meta
    name: syndesis-meta-config
  data:
    application.yml: |-
      server:
        port: 8080
      # We only want the status, not the full data. Hence security on, sensitive off.
      # See https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-monitoring.html
      # For details
      management:
        port: 8181
        security:
          enabled: true
      endpoints:
        health:
          sensitive: false
