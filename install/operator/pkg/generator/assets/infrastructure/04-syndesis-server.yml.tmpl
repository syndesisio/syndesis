- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/type: infrastructure
      syndesis.io/component: syndesis-server
    name: syndesis-server
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
      name: http
    selector:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/component: syndesis-server
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/type: infrastructure
      syndesis.io/component: syndesis-server
    name: syndesis-server
  spec:
    replicas: 1
    selector:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/component: syndesis-server
    strategy:
      resources:
        limits:
          memory: "256Mi"
        requests:
          memory: "20Mi"
      type: Recreate
    template:
      metadata:
        labels:
          app: syndesis
          com.company: Red_Hat
          rht.prod_name: Red_Hat_Integration
          rht.prod_ver: "{{.Version}}"
          rht.comp: Fuse
          rht.comp_ver: "{{.Version}}"
          rht.subcomp: syndesis-server
          rht.subcomp_t: infrastructure
          syndesis.io/app: syndesis
          syndesis.io/type: infrastructure
          syndesis.io/component: syndesis-server
      spec:
        serviceAccountName: syndesis-server
        containers:
        - name: syndesis-server
          env:
          - name: JAVA_APP_DIR
            value: /deployments
          - name: JAVA_OPTIONS
            value: "-Djava.net.preferIPv4Stack=true -Duser.home=/tmp {{.Syndesis.Components.Server.JavaOptions}}"
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: ENDPOINTS_TEST_SUPPORT_ENABLED
            value: '{{ .Syndesis.Components.Server.Features.TestSupport }}'
          - name: CONTROLLERS_INTEGRATION_ENABLED
            value: '{{ .Syndesis.Components.Server.Features.DeployIntegrations }}'
          - name: POSTGRESQL_SAMPLEDB_PASSWORD
            value: '{{.Syndesis.Components.Database.SampledbPassword}}'
          - name: CLIENT_STATE_AUTHENTICATION_ALGORITHM
            value: "HmacSHA1"
          - name: CLIENT_STATE_AUTHENTICATION_KEY
            valueFrom:
              secretKeyRef:
                name: syndesis-server-secret
                key: clientStateAuthenticationKey
          - name: CLIENT_STATE_ENCRYPTION_ALGORITHM
            value: "AES/CBC/PKCS5Padding"
          - name: CLIENT_STATE_ENCRYPTION_KEY
            valueFrom:
              secretKeyRef:
                name: syndesis-server-secret
                key: clientStateEncryptionKey
          - name: CLIENT_STATE_TID
            value: "1"
          - name: INTEGRATION_STATE_CHECK_INTERVAL
            value: '{{ .Syndesis.Components.Server.Features.IntegrationStateCheckInterval }}'
          - name: OPENSHIFT_MANAGEMENT_URL_FOR3SCALE
            value: '{{ .Syndesis.Components.Server.Features.ManagementUrlFor3scale }}'
{{- if .Syndesis.Addons.Jaeger.Enabled}}
          - name: JAEGER_ENDPOINT
        {{- if .Syndesis.Addons.Jaeger.CollectorUri}}
            value: "{{.Syndesis.Addons.Jaeger.CollectorUri}}"
        {{- else}}
            value: "http://syndesis-jaeger-collector:14268/api/traces"
        {{- end}}
          - name: JAEGER_SAMPLER_TYPE
            value: "{{.Syndesis.Addons.Jaeger.SamplerType}}"
          - name: JAEGER_SAMPLER_PARAM
            value: "{{.Syndesis.Addons.Jaeger.SamplerParam}}"
{{- end}}
{{- if .Syndesis.Addons.Knative.Enabled}}
          # Marker that causes a redeployment of the syndesis server, so that the new configuration is applied
          - name: KNATIVE_ENABLED
            value: "true"
{{- end}}
{{if .DevSupport}}
          - name: JAVA_DEBUG
            value: "true"
{{end}}
{{if .DevSupport}}
          image: ' '
{{else}}
          image: '{{ .Syndesis.Components.Server.Image }}'
{{end}}
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              port: 8080
              path: /api/v1/version
              httpHeaders:
              - name: Accept
                value: 'text/plain'
            initialDelaySeconds: 300
            periodSeconds: 20
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: "/health"
              port: 8181
            initialDelaySeconds: 10
          ports:
          - containerPort: 8080
            name: http
          - containerPort: 8181
            name: metrics
          - containerPort: 9779
            name: prometheus
          - containerPort: 8778
            name: jolokia
          workingDir: /deployments
          volumeMounts:
          - name: config-volume
            mountPath: /deployments/config
          # Set QoS class to "Guaranteed" (limits == requests)
          # This doesn't work on OSO as there is a fixed ratio
          # from limit to resource (80% currently). 'requests' is ignored there
          resources:
            limits:
              memory: '{{ .Syndesis.Components.Server.Resources.Limit.Memory }}'
              cpu: '{{ .Syndesis.Components.Server.Resources.Limit.CPU }}'
            requests:
              memory: '{{ .Syndesis.Components.Server.Resources.Request.Memory }}'
              cpu: '{{ .Syndesis.Components.Server.Resources.Request.CPU }}'
        volumes:
        - name: config-volume
          configMap:
            name: syndesis-server-config
    triggers:
    - type: ConfigChange
{{if .DevSupport}}
    - imageChangeParams:
        automatic: true
        containerNames:
        - syndesis-server
        from:
          kind: ImageStreamTag
          name: 'syndesis-server:latest'
          namespace: '{{.OpenShiftProject}}'
      type: ImageChange

- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: syndesis-server
    labels:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/type: infrastructure
      syndesis.io/component: syndesis-server
  spec:
    tags:
    - name: "latest"
      from:
        kind: ImageStreamTag
        name: 'syndesis-server:latest'
{{end}}
