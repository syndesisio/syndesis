- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/type: infrastructure
      syndesis.io/component: syndesis-oauthproxy
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: syndesis-oauthproxy-tls
    name: syndesis-oauthproxy
  spec:
    ports:
    - port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/component: syndesis-oauthproxy
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/type: infrastructure
      syndesis.io/component: syndesis-oauthproxy
    name: syndesis-oauthproxy
  spec:
    replicas: 1
    selector:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/component: syndesis-oauthproxy
    strategy:
      resources:
        limits:
          memory: "256Mi"
        requests:
          memory: "20Mi"
      type: Recreate
    template:
      metadata:
        labels:
          app: syndesis
          syndesis.io/app: syndesis
          syndesis.io/type: infrastructure
          syndesis.io/component: syndesis-oauthproxy
      spec:
        containers:
        - name: oauthproxy
          image: '{{ .Syndesis.Components.Oauth.Image }}'
          args:
            - --provider=openshift
            - --client-id=system:serviceaccount:{{.OpenShiftProject}}:syndesis-oauth-client
            - --upstream=http://syndesis-server/api/
            - --upstream=http://syndesis-server/mapper/
            - --upstream=http://syndesis-ui/
            - --upstream=http://syndesis-dv/dv/
            - --tls-cert=/etc/tls/private/tls.crt
            - --tls-key=/etc/tls/private/tls.key
            - --pass-access-token
            - --skip-provider-button
            - --skip-auth-regex=/logout
            - --skip-auth-regex=/[^/]+\.(png|jpg|eot|svg|ttf|woff|woff2)
            - --skip-auth-regex=/api/v1/swagger.*
            - --skip-auth-regex=/api/v1/index.html
            - --skip-auth-regex=/api/v1/credentials/callback
            - --skip-auth-regex=/api/v1/version
            - --skip-auth-regex=/config.json
            - --skip-auth-preflight
            - --openshift-ca=/etc/pki/tls/certs/ca-bundle.crt
            - --openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
{{ if (not .Syndesis.Components.Oauth.DisableSarCheck) }}
            - --openshift-sar={"namespace":"{{.Syndesis.Components.Oauth.SarNamespace}}","resource":"pods","verb":"get"}
{{ end }}
            # Disabled for now: --pass-user-bearer-token as this requires extra permission which only
            # can be given by a cluster-admin
          env:
          - name: OAUTH2_PROXY_COOKIE_SECRET
            valueFrom:
              secretKeyRef:
                name: syndesis-global-config
                key: OAUTH_COOKIE_SECRET
          - name: OAUTH2_PROXY_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: syndesis-global-config
                key: OPENSHIFT_OAUTH_CLIENT_SECRET
          ports:
          - containerPort: 8443
            name: public
            protocol: TCP
          readinessProbe:
            httpGet:
              port: 8443
              path: /oauth/healthz
              scheme: HTTPS
            initialDelaySeconds: 15
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              port: 8443
              path: /oauth/healthz
              scheme: HTTPS
            initialDelaySeconds: 15
            timeoutSeconds: 10
          volumeMounts:
          - mountPath: /etc/tls/private
            name: syndesis-oauthproxy-tls
          resources:
            limits:
              memory: 200Mi
            requests:
              memory: 20Mi
        serviceAccountName: syndesis-oauth-client
        volumes:
        - name: syndesis-oauthproxy-tls
          secret:
            secretName: syndesis-oauthproxy-tls
    triggers:
    - type: ConfigChange
