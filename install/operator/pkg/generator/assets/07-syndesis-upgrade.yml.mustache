- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: syndesis-upgrade
    labels:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/type: infrastructure
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${UPGRADE_VOLUME_CAPACITY}
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    labels:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/type: infrastructure
    name: syndesis-upgrade
    annotations:
      openshift.io/display-name: "Syndesis Upgrade"
      description: |-
        This is the upgrade application for Syndesis.
      openshift.io/long-description: |-
        When this template is applied then an upgrade to a new Syndesis version is performed.
        Only the infrastructure components are updated, no running integration is touched.
        Before doing the upgrade a backup is performed and restored in case of a rollback.
      tags: "syndesis,upgrade"
      iconClass: icon-rh-integration
      openshift.io/provider-display-name: "Red Hat, Inc."
      openshift.io/documentation-url: "https://syndesis.io"
      openshift.io/support-url: "https://access.redhat.com"
  parameters:
  - name: UPGRADE_REGISTRY
    description: 'Registry from where to pick up the upgrade pod'
    value: docker.io
    required: true
  message: |-
    Syndesis upgrade process started
  objects:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: syndesis-upgrade
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${UPGRADE_VOLUME_CAPACITY}
  - apiVersion: v1
    kind: Pod
    metadata:
      name: syndesis-upgrade-{{ Tags.Upgrade }}
    spec:
      serviceAccountName: syndesis-operator
      containers:
      - name: upgrade
        image: ${UPGRADE_REGISTRY}/{{ Images.SyndesisImagesPrefix }}/{{ Images.Syndesis.Upgrade }}:{{ Tags.Upgrade }}
        env:
          - name: SYNDESIS_UPGRADE_PROJECT
            valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
        imagePullPolicy: IfNotPresent
        args:
          - "--backup"
          - "/opt/backup"
        volumeMounts:
        - mountPath: /opt/backup
          name: backup-dir
      volumes:
      - name: backup-dir
        persistentVolumeClaim:
          claimName: syndesis-upgrade
      restartPolicy: Never
