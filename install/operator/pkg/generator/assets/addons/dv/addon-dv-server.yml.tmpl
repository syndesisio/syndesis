- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/type: infrastructure
      syndesis.io/component: syndesis-dv
    name: syndesis-dv
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/component: syndesis-dv
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/type: infrastructure
      syndesis.io/component: syndesis-dv
    name: syndesis-dv
  spec:
    replicas: 1
    selector:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/component: syndesis-dv
    strategy:
      resources:
        limits:
          memory: "256Mi"
        requests:
          memory: "20Mi"
      type: Recreate
    template:
      metadata:
        labels:
          app: syndesis
          syndesis.io/app: syndesis
          syndesis.io/type: infrastructure
          syndesis.io/component: syndesis-dv
      spec:
        serviceAccountName: syndesis-server
        containers:
        - name: syndesis-dv
          envFrom:
            - configMapRef:
                name: dv-sso-config
                optional: true
          env:
          - name: JAVA_APP_DIR
            value: /deployments
          - name: JAVA_OPTIONS
            value: "-Djava.net.preferIPv4Stack=true -Duser.home=/tmp -Djava.net.preferIPv4Addresses=true -Dlog4j.logger.org.apache.http=DEBUG"
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: GC_MAX_METASPACE_SIZE
            value: "512"
          - name: BUILD_IMAGE_STREAM
            value: syndesis-s2i:{{ tagOf .Syndesis.Components.S2I.Image }}
          - name: POSTGRESQL_PASSWORD
            value: {{.Syndesis.Components.Database.Password}}
          - name: POSTGRESQL_USER
            value: {{.Syndesis.Components.Database.User}}
          - name: POSTGRESQL_DATABASE
            value: {{.Syndesis.Components.Database.Name}}
          - name: OPENSHIFT_MANAGEMENT_URL_FOR3SCALE
            value: '{{.Syndesis.Components.Server.Features.ManagementURLFor3scale}}'
          - name: ENDPOINTS_TEST_SUPPORT_ENABLED
            value: '{{ .Syndesis.Components.Server.Features.TestSupport }}'
{{if .DevSupport}}
          - name: JAVA_DEBUG
            value: "true"
{{end}}
{{if .DevSupport}}
          image: ' '
{{else}}
          image: '{{ .Syndesis.Addons.DV.Image }}'
{{end}}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              port: 8080
              path: "/dv/actuator/health"
              httpHeaders:
              - name: Accept
                value: 'application/json'
            initialDelaySeconds: 60
            periodSeconds: 20
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: "/dv/actuator/health"
              port: 8080
              httpHeaders:
              - name: Accept
                value: 'application/json'
            initialDelaySeconds: 60
            periodSeconds: 20
            timeoutSeconds: 5
          ports:
          - containerPort: 8080
            name: http
          - containerPort: 9779
            name: prometheus
          - containerPort: 8778
            name: jolokia
          workingDir: /deployments
          volumeMounts:
          - name: config-volume
            mountPath: /deployments/config
          # Set QoS class to "Guaranteed" (limits == requests)
          # This doesn't work on OSO as there is a fixed ratio
          # from limit to resource (80% currently). 'requests' is ignored there
          resources:
            limits:
              memory: {{.Syndesis.Addons.DV.Resources.Memory}}
              cpu: 750m
            requests:
              memory: 256Mi
              cpu: 350m
        volumes:
        - name: config-volume
          configMap:
            name: syndesis-server-config
    triggers:
    - type: ConfigChange
{{if .DevSupport}}
    - imageChangeParams:
        automatic: true
        containerNames:
        - syndesis-dv
        from:
          kind: ImageStreamTag
          name: syndesis-dv:latest
          namespace: {{.OpenShiftProject}}
      type: ImageChange

- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: syndesis-dv
    labels:
      app: syndesis
      syndesis.io/app: syndesis
      syndesis.io/type: infrastructure
      syndesis.io/component: syndesis-dv
  spec:
    tags:
    - name: "latest"
      from:
        kind: ImageStreamTag
        name: 'syndesis-dv:latest'
{{end}}
